<?xml version="1.0" encoding="utf-8" ?>
<!-- *******************************************************************
These sample files contain formatting information used by the Windows 
PowerShell engine. Do not edit or change the contents of this file 
directly. Please see the Windows PowerShell documentation or type 
Get-Help Update-TypeData for more information.

Copyright (c) Microsoft Corporation.  All rights reserved.
 
THIS SAMPLE CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY 
OF ANY KIND,WHETHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO 
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
PURPOSE. IF THIS CODE AND INFORMATION IS MODIFIED, THE ENTIRE RISK OF USE
OR RESULTS IN CONNECTION WITH THE USE OF THIS CODE AND INFORMATION 
REMAINS WITH THE USER.
******************************************************************** -->
<Types>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerConditionalForwarderZone</Name>
        <Members>
            <ScriptProperty>
                <Name>MasterServers</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['MasterServers'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['MasterServers'].Value = [System.String[]]$value
                </SetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerDiagnostics</Name>
        <Members>
            <ScriptProperty>
                <Name>FilterIPAddressList</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['FilterIPAddressList'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['FilterIPAddressList'].Value = [System.String[]]$value
                </SetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerForwarder</Name>
        <Members>
            <ScriptProperty>
                <Name>IPAddress</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['IPAddress'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['IPAddress'].Value = [System.String[]]$value
                </SetScriptBlock>                
            </ScriptProperty>
            <ScriptProperty>
                <Name>ReorderedIPAddress</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['ReorderedIPAddress'].Value)
                </GetScriptBlock>
            </ScriptProperty>            
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerRecursionScope</Name>
        <Members>
            <ScriptProperty>
                <Name>Forwarder</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['Forwarder'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['Forwarder'].Value = [System.String[]]$value
                </SetScriptBlock>                
            </ScriptProperty>           
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerPrimaryZone</Name>
        <Members>
            <ScriptProperty>
                <Name>NotifyServers</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['NotifyServers'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['NotifyServers'].Value = [System.String[]]$value
                </SetScriptBlock>
            </ScriptProperty>
                <ScriptProperty>
                    <Name>SecondaryServers</Name>
                    <GetScriptBlock>
                        [OutputType([System.Net.IPAddress[]])]
                        param()
                        [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['SecondaryServers'].Value)
                    </GetScriptBlock>
                    <SetScriptBlock>
                        param([System.Net.IPAddress[]]$value)
                        $this.PSBase.CimInstanceProperties['SecondaryServers'].Value = [System.String[]]$value
                    </SetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>AllowedDcForNsRecordsAutoCreation</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['AllowedDcForNsRecordsAutoCreation'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['AllowedDcForNsRecordsAutoCreation'].Value = [System.String[]]$value
                </SetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerResourceRecordA</Name>
        <Members>
            <ScriptProperty>
                <Name>IPv4Address</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress])]
                    param()
                    [System.Net.IPAddress]($this.PSBase.CimInstanceProperties['IPv4Address'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress]$value)
                    $this.PSBase.CimInstanceProperties['IPv4Address'].Value = [System.String]$value
                </SetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerResourceRecordAAAA</Name>
        <Members>
            <ScriptProperty>
                <Name>IPv6Address</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress])]
                    param()
                    [System.Net.IPAddress]($this.PSBase.CimInstanceProperties['IPv6Address'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress]$value)
                    $this.PSBase.CimInstanceProperties['IPv6Address'].Value = [System.String]$value
                </SetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerResourceRecordWins</Name>
        <Members>
            <ScriptProperty>
                <Name>WinsServers</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['WinsServers'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['WinsServers'].Value = [System.String[]]$value
                </SetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerSecondaryZone</Name>
        <Members>
            <ScriptProperty>
                <Name>MasterServers</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['MasterServers'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['MasterServers'].Value = [System.String[]]$value
                </SetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerSettingBrief</Name>
        <Members>
            <ScriptProperty>
                <Name>AllIPAddress</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['AllIPAddress'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['AllIPAddress'].Value = [System.String[]]$value
                </SetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>ListeningIPAddress</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['ListeningIPAddress'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['ListeningIPAddress'].Value = [System.String[]]$value
                </SetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerStubZone</Name>
        <Members>
            <ScriptProperty>
                <Name>MasterServers</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['MasterServers'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['MasterServers'].Value = [System.String[]]$value
                </SetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>LocalMasters</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['LocalMasters'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['LocalMasters'].Value = [System.String[]]$value
                </SetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerZoneAging</Name>
        <Members>
            <ScriptProperty>
                <Name>ScavengeServers</Name>
                <GetScriptBlock>
                    [OutputType([System.Net.IPAddress[]])]
                    param()
                    [System.Net.IPAddress[]]($this.PSBase.CimInstanceProperties['ScavengeServers'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.Net.IPAddress[]]$value)
                    $this.PSBase.CimInstanceProperties['ScavengeServers'].Value = [System.String[]]$value
                </SetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerSigningKey</Name>
        <Members>
            <ScriptProperty>
                <Name>KeyId</Name>
                <GetScriptBlock>
                    [OutputType([System.GUID])]
                    param()
                    [System.GUID]($this.PSBase.CimInstanceProperties['KeyId'].Value)
                </GetScriptBlock>
                <SetScriptBlock>
                    param([System.GUID]$value)
                    $this.PSBase.CimInstanceProperties['KeyId'].Value = [System.String]$value
                </SetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>IsRolloverEnabled</Name>
                <GetScriptBlock>
                    [OutputType([boolean])]
                    param()
                    ($this.PSBase.CimInstanceProperties['RolloverPeriod'].Value -ne [Timespan]::MaxValue)
                </GetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>
    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerSigningKeyExtendedInformation</Name>
        <Members>
            <ScriptProperty>
                <Name>KeyId</Name>
                <GetScriptBlock>
                    [OutputType([System.GUID])]
                    param()
                    [System.GUID]($this.PSBase.CimInstanceProperties['SigningKey'].Value.KeyId)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>KeyType</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.KeyType)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>CurrentState</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.CurrentState)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>KeyStorageProvider</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.KeyStorageProvider)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>StoreKeysInAD</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.StoreKeysInAD)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>CryptoAlgorithm</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.CryptoAlgorithm)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>KeyLength</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.KeyLength)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>DnsKeySignatureValidityPeriod</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.DnsKeySignatureValidityPeriod)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>DSSignatureValidityPeriod</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.DSSignatureValidityPeriod)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>ZoneSignatureValidityPeriod</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.ZoneSignatureValidityPeriod)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>InitialRolloverOffset</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.InitialRolloverOffset)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>RolloverPeriod</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.RolloverPeriod)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>RolloverType</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.KeyType)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>NextRolloverAction</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.NextRolloverAction)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>LastRolloverTime</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.LastRolloverTime)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>NextRolloverTime</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.NextRolloverTime)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>CurrentRolloverStatus</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.CurrentRolloverStatus)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>IsRolloverEnabled</Name>
                <GetScriptBlock>
                    [OutputType([boolean])]
                    param()
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.RolloverPeriod -ne [Timespan]::MaxValue)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>ActiveKey</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.ActiveKey)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>StandbyKey</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.StandbyKey)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>NextKey</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKey'].Value.NextKey)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>CurrentRollState</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKeyOpState'].Value.CurrentRollState)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>ManualTrigger</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKeyOpState'].Value.ManualTrigger)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>NextKeyGenerationTime</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKeyOpState'].Value.NextKeyGenerationTime)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>PreRollEventFired</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKeyOpState'].Value.PreRollEventFired)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>ActiveKeyScope</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKeyOpState'].Value.ActiveKeyScope)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>NextKeyScope</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKeyOpState'].Value.NextKeyScope)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>StandbyKeyScope</Name>
                <GetScriptBlock>
                    ($this.PSBase.CimInstanceProperties['SigningKeyOpState'].Value.StandbyKeyScope)
                </GetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>

    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerDnsSecZoneSetting</Name>
        <Members>
            <ScriptProperty>
                <Name>IsNSec3SaltConfigured</Name>
                <GetScriptBlock>
                    [OutputType([boolean])]
                    param()
                    ($this.PSBase.CimInstanceProperties['NSec3RandomSaltLength'].Value -ne 0) -or
                    (($this.PSBase.CimInstanceProperties['NSec3UserSalt'].Value -ne $null) -and
                     ($this.PSBase.CimInstanceProperties['NSec3UserSalt'].Value -ne "-"))
                </GetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>

    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerZoneSigningMetadata</Name>
        <Members>
            <ScriptProperty>
                <Name>ZoneName</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.ZoneName)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>IsSigned</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.IsSigned)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>DenialOfExistence</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.DenialOfExistence)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>NSec3HashAlgorithm</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.NSec3HashAlgorithm)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>NSec3Iterations</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.NSec3Iterations)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>NSec3OptOut</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.NSec3OptOut)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>NSec3RandomSaltLength</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.NSec3RandomSaltLength)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>NSec3UserSalt</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.NSec3UserSalt)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>DistributeTrustAnchor</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.DistributeTrustAnchor)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>EnableRfc5011KeyRollover</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.EnableRfc5011KeyRollover)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>DSRecordGenerationAlgorithm</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.DSRecordGenerationAlgorithm)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>DSRecordSetTtl</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.DSRecordSetTtl)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>DnsKeyRecordSetTtl</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.DnsKeyRecordSetTtl)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>SignatureInceptionOffset</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.SignatureInceptionOffset)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>SecureDelegationPollingPeriod</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.SecureDelegationPollingPeriod)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>PropagationTime</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.PropagationTime)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>ParentHasSecureDelegation</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.ParentHasSecureDelegation)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>NSec3CurrentSalt</Name>
                <GetScriptBlock>
		    ($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.NSec3CurrentSalt)
                </GetScriptBlock>
            </ScriptProperty>
            <ScriptProperty>
                <Name>CurrentRollingSkdGuid</Name>
                <GetScriptBlock>
                    [OutputType([System.GUID])]
                    param()
		    [System.GUID]($this.PSBase.CimInstanceProperties['DnsSecZoneSetting'].Value.CurrentRollingSkdGuid)
                </GetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>

    <Type>
        <Name>Microsoft.Management.Infrastructure.CimInstance#DnsServerValidity</Name>
        <Members>
            <ScriptProperty>
                <Name>IPAddress</Name>
                <GetScriptBlock>
					[OutputType([System.Net.IPAddress])]
                    param()
                    [System.Net.IPAddress]($this.PSBase.CimInstanceProperties['IPAddress'].Value)
                </GetScriptBlock>
            </ScriptProperty>
        </Members>
    </Type>
    
</Types>
