{
	"version": "2",
	"templates": [
		{
			"type": 1,
			"title": "Adguardhome-sync",
			"name": "Adguardhome-sync",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/adguardhome-sync/config</p>",
			"description": "[Adguardhome-sync](https://github.com/bakito/adguardhome-sync/) is a tool to synchronize AdGuardHome config to replica instances.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/adguardhomesync-icon.png",
			"image": "linuxserver/adguardhome-sync:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "CONFIGFILE",
					"label": "CONFIGFILE",
					"default": "/config/adguardhome-sync.yaml",
					"description": "Set a custom config file."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/adguardhome-sync/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Airsonic-advanced",
			"name": "Airsonic-advanced",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/airsonic-advanced/config<br>mkdir -p /volume1/docker/airsonic-advanced/music<br>mkdir -p /volume1/docker/airsonic-advanced/playlists<br>mkdir -p /volume1/docker/airsonic-advanced/podcasts<br>mkdir -p /volume1/docker/airsonic-advanced/media</p>",
			"description": "[Airsonic-advanced](https://github.com/airsonic-advanced/airsonic-advanced) is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/airsonic-banner.png",
			"image": "linuxserver/airsonic-advanced:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "CONTEXT_PATH",
					"label": "CONTEXT_PATH",
					"default": "",
					"description": "For setting url-base in reverse proxy setups."
				},
				{
					"name": "JAVA_OPTS",
					"label": "JAVA_OPTS",
					"default": "",
					"description": "For passing additional java options."
				}
			],
			"ports": [
				"4040:4040/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/airsonic-advanced/config"
			},
			{
				"container": "/music",
				"bind": "/volume1/docker/airsonic-advanced/music"
			},
			{
				"container": "/playlists",
				"bind": "/volume1/docker/airsonic-advanced/playlists"
			},
			{
				"container": "/podcasts",
				"bind": "/volume1/docker/airsonic-advanced/podcasts"
			},
			{
				"container": "/media",
				"bind": "/volume1/docker/airsonic-advanced/media"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Altus",
			"name": "Altus",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/altus/config</p>",
			"description": "[Altus](https://github.com/amanharwara/altus) is an Electron-based WhatsApp client with themes and multiple account support.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/altus-logo.png",
			"image": "linuxserver/altus:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/altus/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Apprise-api",
			"name": "Apprise-api",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/apprise-api/config</p>",
			"description": "[Apprise-api](https://github.com/caronc/apprise-api) Takes advantage of [Apprise](https://github.com/caronc/apprise) through your network with a user-friendly API. * Send notifications to more then 65+ services. * An incredibly lightweight gateway to Apprise. * A production ready micro-service at your disposal. Apprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.",
			"categories": [
				"Notifications"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png",
			"image": "linuxserver/apprise-api:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8000:8000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/apprise-api/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Audacity",
			"name": "Audacity",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/audacity/config</p>",
			"description": "[Audacity](https://www.audacityteam.org/) is an easy-to-use, multi-track audio editor and recorder. Developed by a group of volunteers as open source.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/audacity-logo.png",
			"image": "linuxserver/audacity:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/audacity/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Babybuddy",
			"name": "Babybuddy",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/babybuddy/config</p>",
			"description": "[Babybuddy](https://github.com/babybuddy/babybuddy) is a buddy for babies! Helps caregivers track sleep, feedings, diaper changes, tummy time and more to learn about and predict baby's needs without (as much) guess work.",
			"platform": "linux",
			"logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/babybuddy-logo.png",
			"image": "linuxserver/babybuddy:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "CSRF_TRUSTED_ORIGINS",
					"label": "CSRF_TRUSTED_ORIGINS",
					"default": "http://127.0.0.1:8000,https://babybuddy.domain.com",
					"description": "Add any address you'd like to access babybuddy at (comma separated, no spaces)"
				}
			],
			"ports": [
				"8000:8000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/babybuddy/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Bambustudio",
			"name": "Bambustudio",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/bambustudio/config</p>",
			"description": "[Bambu Studio](https://bambulab.com/en/download/studio) Bambu Studio is an open-source, cutting-edge, feature-rich slicing software. It contains project-based workflows, systematically optimized slicing algorithms, and an easy-to-use graphical interface, bringing users an incredibly smooth printing experience.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/bambustudio-logo.png",
			"image": "linuxserver/bambustudio:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/bambustudio/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Bazarr",
			"name": "Bazarr",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/bazarr/config<br>mkdir -p /volume1/docker/bazarr/movies<br>mkdir -p /volume1/docker/bazarr/tv</p>",
			"description": "[Bazarr](https://www.bazarr.media/) is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/bazarr.png",
			"image": "linuxserver/bazarr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"6767:6767/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/bazarr/config"
			},
			{
				"container": "/movies",
				"bind": "/volume1/docker/bazarr/movies"
			},
			{
				"container": "/tv",
				"bind": "/volume1/docker/bazarr/tv"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Beets",
			"name": "Beets",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/beets/config<br>mkdir -p /volume1/docker/beets/music<br>mkdir -p /volume1/docker/beets/downloads</p>",
			"description": "[Beets](http://beets.io/) is a music library manager and not, for the most part, a music player. It does include a simple player plugin and an experimental Web-based player, but it generally leaves actual sound-reproduction to specialized tools.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/beets-icon.png",
			"image": "linuxserver/beets:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8337:8337/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/beets/config"
			},
			{
				"container": "/music",
				"bind": "/volume1/docker/beets/music"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/beets/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Blender",
			"name": "Blender",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/blender/config</p>",
			"description": "[Blender](https://www.blender.org/) is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. **This image does not support GPU rendering out of the box only accelerated workspace experience**",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/blender-logo.png",
			"image": "linuxserver/blender:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "SUBFOLDER",
					"label": "SUBFOLDER",
					"default": "/",
					"description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/blender/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Boinc",
			"name": "Boinc",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/boinc/config</p>",
			"description": "[BOINC](https://boinc.berkeley.edu/) is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.",
			"categories": [
				"Research"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/BOINC/boinc/master/doc/logo/boinc_logo_black.jpg",
			"image": "linuxserver/boinc:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "PASSWORD",
					"label": "PASSWORD",
					"default": "",
					"description": "Optionally set a password for the gui."
				}
			],
			"ports": [
				"8080:8080/tcp",
				"8181:8181/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/boinc/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Booksonic-air",
			"name": "Booksonic-air",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/booksonic-air/config<br>mkdir -p /volume1/docker/booksonic-air/audiobooks<br>mkdir -p /volume1/docker/booksonic-air/podcasts<br>mkdir -p /volume1/docker/booksonic-air/othermedia</p>",
			"description": "[Booksonic-air](http://booksonic.org) is a platform for accessing the audiobooks you own wherever you are. At the moment the platform consists of: * Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server and based on Airsonic. * Booksonic App - An DSub based Android app for connection to Booksonic-Air servers.",
			"categories": [
				"Audio"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic-air.png",
			"image": "linuxserver/booksonic-air:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "CONTEXT_PATH",
					"label": "CONTEXT_PATH",
					"default": "url-base",
					"description": "Base url for use with reverse proxies etc."
				}
			],
			"ports": [
				"4040:4040/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/booksonic-air/config"
			},
			{
				"container": "/audiobooks",
				"bind": "/volume1/docker/booksonic-air/audiobooks"
			},
			{
				"container": "/podcasts",
				"bind": "/volume1/docker/booksonic-air/podcasts"
			},
			{
				"container": "/othermedia",
				"bind": "/volume1/docker/booksonic-air/othermedia"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Bookstack",
			"name": "Bookstack",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/bookstack/config</p>",
			"description": "[Bookstack](https://github.com/BookStackApp/BookStack) is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease. Powered by SQL and including a Markdown editor for those who prefer it, BookStack is geared towards making documentation more of a pleasure than a chore. For more information on BookStack visit their website and check it out: https://www.bookstackapp.com",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/bookstack-logo500x500.png",
			"image": "linuxserver/bookstack:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "APP_URL",
					"label": "APP_URL",
					"default": "yourbaseurl",
					"description": "for specifying the IP:port or URL your application will be accessed on (ie. `http://192.168.1.1:6875` or `https://bookstack.mydomain.com`"
				},
				{
					"name": "DB_HOST",
					"label": "DB_HOST",
					"default": "yourdbhost",
					"description": "for specifying the database host"
				},
				{
					"name": "DB_PORT",
					"label": "DB_PORT",
					"default": "yourdbport",
					"description": "for specifying the database port if not default 3306"
				},
				{
					"name": "DB_USER",
					"label": "DB_USER",
					"default": "yourdbuser",
					"description": "for specifying the database user"
				},
				{
					"name": "DB_PASS",
					"label": "DB_PASS",
					"default": "yourdbpass",
					"description": "for specifying the database password (minimum 4 characters & non-alphanumeric passwords must be properly escaped.)"
				},
				{
					"name": "DB_DATABASE",
					"label": "DB_DATABASE",
					"default": "bookstackapp",
					"description": "for specifying the database to be used"
				},
				{
					"name": "QUEUE_CONNECTION",
					"label": "QUEUE_CONNECTION",
					"default": "",
					"description": "Set to `database` to enable async actions like sending email or triggering webhooks. See [documentation](https://www.bookstackapp.com/docs/admin/email-webhooks/#async-action-handling)."
				}
			],
			"ports": [
				"6875:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/bookstack/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Budge",
			"name": "Budge",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/budge/config</p>",
			"description": "[Budge](https://github.com/linuxserver/budge) is an open source 'budgeting with envelopes' personal finance app.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/budge:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/budge/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Build-agent",
			"name": "Build-agent",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/build-agent/config</p>",
			"description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/build-agent for details.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/build-agent:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/build-agent/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Calibre",
			"name": "Calibre",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/calibre/config</p>",
			"description": "[Calibre](https://calibre-ebook.com/) is a powerful and easy to use e-book manager. Users say it's outstanding and a must-have. It'll allow you to do nearly everything and it takes things a step beyond normal e-book software. It's also completely free and open source and great for both casual users and computer experts.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://github.com/kovidgoyal/calibre/raw/master/resources/images/lt.png",
			"image": "linuxserver/calibre:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "PASSWORD",
					"label": "PASSWORD",
					"default": "",
					"description": "Optionally set a password for the gui."
				},
				{
					"name": "CLI_ARGS",
					"label": "CLI_ARGS",
					"default": "",
					"description": "Optionally pass cli start arguments to calibre."
				}
			],
			"ports": [
				"8080:8080/tcp",
				"8181:8181/tcp",
				"8081:8081/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/calibre/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Calibre-web",
			"name": "Calibre-web",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/calibre-web/config<br>mkdir -p /volume1/docker/calibre-web/books</p>",
			"description": "[Calibre-web](https://github.com/janeczku/calibre-web) is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database. It is also possible to integrate google drive and edit metadata and your calibre library through the app itself. This software is a fork of library and licensed under the GPL v3 License.",
			"categories": [
				"Books"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/calibre-web-icon.png",
			"image": "linuxserver/calibre-web:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "DOCKER_MODS",
					"label": "DOCKER_MODS",
					"default": "linuxserver/mods:universal-calibre",
					"description": "#optional & **x86-64 only** Adds the ability to perform ebook conversion"
				},
				{
					"name": "OAUTHLIB_RELAX_TOKEN_SCOPE",
					"label": "OAUTHLIB_RELAX_TOKEN_SCOPE",
					"default": "1",
					"description": "Optionally set this to allow Google OAUTH to work"
				}
			],
			"ports": [
				"8083:8083/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/calibre-web/config"
			},
			{
				"container": "/books",
				"bind": "/volume1/docker/calibre-web/books"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Calligra",
			"name": "Calligra",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/calligra/config</p>",
			"description": "[Calligra](https://calligra.org/) is an office and graphic art suite by KDE. It is available for desktop PCs, tablet computers, and smartphones. It contains applications for word processing, spreadsheets, presentation, vector graphics, and editing databases.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/calligra-logo.png",
			"image": "linuxserver/calligra:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/calligra/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Changedetection.io",
			"name": "Changedetection.io",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/changedetection.io/config</p>",
			"description": "[Changedetection.io](https://github.com/dgtlmoon/changedetection.io) provides free, open-source web page monitoring, notification and change detection.",
			"platform": "linux",
			"logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/changedetection-icon.png",
			"image": "linuxserver/changedetection.io:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "BASE_URL",
					"label": "BASE_URL",
					"default": "",
					"description": "Specify the full URL (including protocol) when running behind a reverse proxy"
				}
			],
			"ports": [
				"5000:5000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/changedetection.io/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Chromium",
			"name": "Chromium",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/chromium/config</p>",
			"description": "[Chromium](https://www.chromium.org/chromium-projects/) is an open-source browser project that aims to build a safer, faster, and more stable way for all users to experience the web.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/chromium-logo.png",
			"image": "linuxserver/chromium:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "CHROME_CLI",
					"label": "CHROME_CLI",
					"default": "https://www.linuxserver.io/",
					"description": "Specify one or multiple Chromium CLI flags, this string will be passed to the application in full."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/chromium/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ci",
			"name": "Ci",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ci/config</p>",
			"description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/ci for details.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/ci:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/ci/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Code-server",
			"name": "Code-server",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/code-server/config</p>",
			"description": "[Code-server](https://coder.com) is VS Code running on a remote server, accessible through the browser. - Code on your Chromebook, tablet, and laptop with a consistent dev environment. - If you have a Windows or Mac workstation, more easily develop for Linux. - Take advantage of large cloud servers to speed up tests, compilations, downloads, and more. - Preserve battery life when you're on the go. - All intensive computation runs on your server. - You're no longer running excess instances of Chrome.",
			"categories": [
				"Development"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/code-server-banner.png",
			"image": "linuxserver/code-server:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "PASSWORD",
					"label": "PASSWORD",
					"default": "password",
					"description": "Optional web gui password, if `PASSWORD` or `HASHED_PASSWORD` is not provided, there will be no auth."
				},
				{
					"name": "HASHED_PASSWORD",
					"label": "HASHED_PASSWORD",
					"default": "",
					"description": "Optional web gui password, overrides `PASSWORD`, instructions on how to create it is below."
				},
				{
					"name": "SUDO_PASSWORD",
					"label": "SUDO_PASSWORD",
					"default": "password",
					"description": "If this optional variable is set, user will have sudo access in the code-server terminal with the specified password."
				},
				{
					"name": "SUDO_PASSWORD_HASH",
					"label": "SUDO_PASSWORD_HASH",
					"default": "",
					"description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`."
				},
				{
					"name": "PROXY_DOMAIN",
					"label": "PROXY_DOMAIN",
					"default": "code-server.my.domain",
					"description": "If this optional variable is set, this domain will be proxied for subdomain proxying. See [Documentation](https://github.com/cdr/code-server/blob/master/docs/FAQ.md#sub-domains)"
				},
				{
					"name": "DEFAULT_WORKSPACE",
					"label": "DEFAULT_WORKSPACE",
					"default": "/config/workspace",
					"description": "If this optional variable is set, code-server will open this directory by default"
				}
			],
			"ports": [
				"8443:8443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/code-server/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Cops",
			"name": "Cops",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/cops/config<br>mkdir -p /volume1/docker/cops/books</p>",
			"description": "[Cops](http://blog.slucas.fr/en/oss/calibre-opds-php-server) by Sébastien Lucas, now maintained by MikesPub, stands for Calibre OPDS (and HTML) Php Server. COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices. Changes in your Calibre library are reflected immediately in your COPS pages. See : [COPS's home](http://blog.slucas.fr/en/oss/calibre-opds-php-server) for more details. Don't forget to check the [Wiki](https://github.com/seblucas/cops/wiki). ## Why? (taken from the author's site) In my opinion Calibre is a marvelous tool but is too big and has too much dependencies to be used for its content server. That's the main reason why I coded this OPDS server. I needed a simple tool to be installed on a small server (Seagate Dockstar in my case). I initially thought of Calibre2OPDS but as it generate static file no search was possible. Later I added an simple HTML catalog that should be usable on my Kobo. So COPS's main advantages are : * No need for many dependencies. * No need for a lot of CPU or RAM. * Not much code. * Search is available. * With Dropbox / owncloud it's very easy to have an up to date OPDS server. * It was fun to code. If you want to use the OPDS feed don't forget to specify feed.php at the end of your URL.",
			"categories": [
				"Books"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cops-icon.png",
			"image": "linuxserver/cops:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/cops/config"
			},
			{
				"container": "/books",
				"bind": "/volume1/docker/cops/books"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Cura",
			"name": "Cura",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/cura/config</p>",
			"description": "[UltiMaker Cura](https://ultimaker.com/software/ultimaker-cura/) is free, easy-to-use 3D printing software trusted by millions of users. Fine-tune your 3D model with 400+ settings for the best slicing and printing results.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cura-logo.png",
			"image": "linuxserver/cura:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/cura/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Daapd",
			"name": "Daapd",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/daapd/config<br>mkdir -p /volume1/docker/daapd/music</p>",
			"description": "[Daapd](https://owntone.github.io/owntone-server/) (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), Chromecast, MPD and internet radio.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-git.png",
			"image": "linuxserver/daapd:latest",
			"network": "host",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/daapd/config"
			},
			{
				"container": "/music",
				"bind": "/volume1/docker/daapd/music"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Darktable",
			"name": "Darktable",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/darktable/config</p>",
			"description": "[darktable](https://www.darktable.org/) is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.",
			"categories": [
				"Productivity"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/darktable-logo.png",
			"image": "linuxserver/darktable:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/darktable/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Davos",
			"name": "Davos",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/davos/config<br>mkdir -p /volume1/docker/davos/download</p>",
			"description": "[Davos](https://github.com/linuxserver/davos) is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.",
			"categories": [
				"Productivity"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/davos/master/docs/list.PNG",
			"image": "linuxserver/davos:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/davos/config"
			},
			{
				"container": "/download",
				"bind": "/volume1/docker/davos/download"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ddclient",
			"name": "Ddclient",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ddclient/config</p>",
			"description": "[Ddclient](https://github.com/ddclient/ddclient) is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
			"categories": [
				"Networking"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ddclient-logo.png",
			"image": "linuxserver/ddclient:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/ddclient/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Deluge",
			"name": "Deluge",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/deluge/config<br>mkdir -p /volume1/docker/deluge/downloads</p>",
			"description": "[Deluge](http://deluge-torrent.org/) is a lightweight, Free Software, cross-platform BitTorrent client. * Full Encryption * WebUI * Plugin System * Much more...",
			"categories": [
				"File Management"
			],
			"platform": "linux",
			"logo": "https://avatars2.githubusercontent.com/u/6733935?v=3&s=200",
			"image": "linuxserver/deluge:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "DELUGE_LOGLEVEL",
					"label": "DELUGE_LOGLEVEL",
					"default": "error",
					"description": "set the loglevel output when running Deluge, default is info for deluged and warning for delgued-web"
				}
			],
			"ports": [
				"8112:8112/tcp",
				"6881:6881/tcp",
				"6881:6881/udp",
				"58846:58846/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/deluge/config"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/deluge/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Digikam",
			"name": "Digikam",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/digikam/config</p>",
			"description": "[digiKam](https://www.digikam.org/): Professional Photo Management with the Power of Open Source",
			"categories": [
				"Photography"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png",
			"image": "linuxserver/digikam:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "SUBFOLDER",
					"label": "SUBFOLDER",
					"default": "/",
					"description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/digikam/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Dillinger",
			"name": "Dillinger",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/dillinger/config</p>",
			"description": "[Dillinger](https://github.com/joemccann/dillinger) is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.",
			"categories": [
				"Development"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dillinger.png",
			"image": "linuxserver/dillinger:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/dillinger/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Diskover",
			"name": "Diskover",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/diskover/config<br>mkdir -p /volume1/docker/diskover/data</p>",
			"description": "[Diskover](https://github.com/diskoverdata/diskover-community) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.",
			"categories": [
				"Productivity"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/diskoverdata/diskover-community/master/diskover-web/public/images/diskover.png",
			"image": "linuxserver/diskover:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "ES_HOST",
					"label": "ES_HOST",
					"default": "elasticsearch",
					"description": "ElasticSearch host (optional)"
				},
				{
					"name": "ES_PORT",
					"label": "ES_PORT",
					"default": "9200",
					"description": "ElasticSearch port (optional)"
				},
				{
					"name": "ES_USER",
					"label": "ES_USER",
					"default": "elastic",
					"description": "ElasticSearch username (optional)"
				},
				{
					"name": "ES_PASS",
					"label": "ES_PASS",
					"default": "changeme",
					"description": "ElasticSearch password (optional)"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/diskover/config"
			},
			{
				"container": "/data",
				"bind": "/volume1/docker/diskover/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Dokuwiki",
			"name": "Dokuwiki",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/dokuwiki/config</p>",
			"description": "[Dokuwiki](https://www.dokuwiki.org/dokuwiki/) is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.",
			"categories": [
				"Productivity"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png",
			"image": "linuxserver/dokuwiki:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/dokuwiki/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Domoticz",
			"name": "Domoticz",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/domoticz/config</p>",
			"description": "[Domoticz](https://www.domoticz.com) is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device.",
			"categories": [
				"Automation"
			],
			"platform": "linux",
			"logo": "https://github.com/domoticz/domoticz/raw/master/www/images/logo.png",
			"image": "linuxserver/domoticz:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "WEBROOT",
					"label": "WEBROOT",
					"default": "domoticz",
					"description": "Sets webroot to domoticz for usage with subfolder reverse proxy. Not needed unless reverse proxying."
				},
				{
					"name": "DBASE",
					"label": "DBASE",
					"default": "<path to database>",
					"description": "Sets path to database. Do not set unless you know what this does."
				}
			],
			"ports": [
				"8080:8080/tcp",
				"6144:6144/tcp",
				"1443:1443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/domoticz/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Doplarr",
			"name": "Doplarr",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/doplarr/config</p>",
			"description": "[Doplarr](https://github.com/kiranshila/Doplarr) is an *arr request bot for Discord.'",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doplarr-logo_title.png",
			"image": "linuxserver/doplarr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "DISCORD__TOKEN",
					"label": "DISCORD__TOKEN",
					"default": "",
					"description": "Specify your discord bot token."
				},
				{
					"name": "OVERSEERR__API",
					"label": "OVERSEERR__API",
					"default": "",
					"description": "Specify your Overseerr API key. Leave blank if using Radarr/Sonarr."
				},
				{
					"name": "OVERSEERR__URL",
					"label": "OVERSEERR__URL",
					"default": "http://localhost:5055",
					"description": "Specify your Overseerr URL. Leave blank if using Radarr/Sonarr."
				},
				{
					"name": "RADARR__API",
					"label": "RADARR__API",
					"default": "",
					"description": "Specify your Radarr API key. Leave blank if using Overseerr."
				},
				{
					"name": "RADARR__URL",
					"label": "RADARR__URL",
					"default": "http://localhost:7878",
					"description": "Specify your Radarr URL. Leave blank if using Overseerr."
				},
				{
					"name": "SONARR__API",
					"label": "SONARR__API",
					"default": "",
					"description": "Specify your Sonarr API key. Leave blank if using Overseerr."
				},
				{
					"name": "SONARR__URL",
					"label": "SONARR__URL",
					"default": "http://localhost:8989",
					"description": "Specify your Sonarr URL. Leave blank if using Overseerr."
				},
				{
					"name": "DISCORD__MAX_RESULTS",
					"label": "DISCORD__MAX_RESULTS",
					"default": "25",
					"description": "Sets the maximum size of the search results selection"
				},
				{
					"name": "DISCORD__REQUESTED_MSG_STYLE",
					"label": "DISCORD__REQUESTED_MSG_STYLE",
					"default": ":plain",
					"description": "Sets the style of the request alert message. One of `:plain` `:embed` `:none`"
				},
				{
					"name": "SONARR__QUALITY_PROFILE",
					"label": "SONARR__QUALITY_PROFILE",
					"default": "",
					"description": "The name of the quality profile to use by default for Sonarr"
				},
				{
					"name": "RADARR__QUALITY_PROFILE",
					"label": "RADARR__QUALITY_PROFILE",
					"default": "",
					"description": "The name of the quality profile to use by default for Radarr"
				},
				{
					"name": "SONARR__ROOTFOLDER",
					"label": "SONARR__ROOTFOLDER",
					"default": "",
					"description": "The root folder to use by default for Sonarr"
				},
				{
					"name": "RADARR__ROOTFOLDER",
					"label": "RADARR__ROOTFOLDER",
					"default": "",
					"description": "The root folder to use by default for Radarr"
				},
				{
					"name": "SONARR__LANGUAGE_PROFILE",
					"label": "SONARR__LANGUAGE_PROFILE",
					"default": "",
					"description": "The name of the language profile to use by default for Sonarr"
				},
				{
					"name": "OVERSEERR__DEFAULT_ID",
					"label": "OVERSEERR__DEFAULT_ID",
					"default": "",
					"description": "The Overseerr user id to use by default if there is no associated discord account for the requester"
				},
				{
					"name": "PARTIAL_SEASONS",
					"label": "PARTIAL_SEASONS",
					"default": "true",
					"description": "Sets whether users can request partial seasons."
				},
				{
					"name": "LOG_LEVEL",
					"label": "LOG_LEVEL",
					"default": ":info",
					"description": "The log level for the logging backend. This can be changed for debugging purposes. One of trace `:debug` `:info` `:warn` `:error` `:fatal` `:report`"
				},
				{
					"name": "JAVA_OPTS",
					"label": "JAVA_OPTS",
					"default": "",
					"description": "For passing additional java options."
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/doplarr/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Doublecommander",
			"name": "Doublecommander",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/doublecommander/config<br>mkdir -p /volume1/docker/doublecommander/data</p>",
			"description": "[Double Commander](https://doublecmd.sourceforge.io/) is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas.",
			"categories": [
				"File Management"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doublecommander-icon.png",
			"image": "linuxserver/doublecommander:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/doublecommander/config"
			},
			{
				"container": "/data",
				"bind": "/volume1/docker/doublecommander/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Duckdns",
			"name": "Duckdns",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/duckdns/config</p>",
			"description": "[Duckdns](https://duckdns.org/) is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duckdns.png",
			"image": "linuxserver/duckdns:latest",
			"network": "host",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "SUBDOMAINS",
					"label": "SUBDOMAINS",
					"default": "subdomain1,subdomain2",
					"description": "multiple subdomains allowed, comma separated, no spaces, if your domain is user.duckdns.org you put user, not a sub-subdomain"
				},
				{
					"name": "TOKEN",
					"label": "TOKEN",
					"default": "token",
					"description": "DuckDNS token"
				},
				{
					"name": "UPDATE_IP",
					"label": "UPDATE_IP",
					"default": "ipv4",
					"description": "Set to `ipv6` or `ipv4` to update  **only** your public IPv4/6 address. Set to `both` to update IPv6 and IPv4 address. This variable makes use of a [third-party service](#notice-regarding-automatic-detection). Omitting this variable uses DuckDNS for detection and only supports IPv4. `both` and `ipv6` modes needs [host networking](#networking-net)."
				},
				{
					"name": "LOG_FILE",
					"label": "LOG_FILE",
					"default": "false",
					"description": "Set to `true` to log to file (also need to map /config)."
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/duckdns/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Duplicati",
			"name": "Duplicati",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/duplicati/config<br>mkdir -p /volume1/docker/duplicati/backups<br>mkdir -p /volume1/docker/duplicati/source</p>",
			"description": "[Duplicati](https://www.duplicati.com/) works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive & S3, Google Drive, box.com, Mega, hubiC and many others.",
			"platform": "linux",
			"logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/duplicati-icon.png",
			"image": "linuxserver/duplicati:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "CLI_ARGS",
					"label": "CLI_ARGS",
					"default": "",
					"description": "Optionally specify any [CLI variables](https://duplicati.readthedocs.io/en/latest/07-other-command-line-utilities/) you want to launch the app with"
				}
			],
			"ports": [
				"8200:8200/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/duplicati/config"
			},
			{
				"container": "/backups",
				"bind": "/volume1/docker/duplicati/backups"
			},
			{
				"container": "/source",
				"bind": "/volume1/docker/duplicati/source"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Emby",
			"name": "Emby",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/emby/config<br>mkdir -p /volume1/docker/emby/data/tvshows<br>mkdir -p /volume1/docker/emby/data/movies<br></p>",
			"description": "[Emby](https://emby.media/) organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.",
			"categories": [
				"Home Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emby-logo.png",
			"image": "linuxserver/emby:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8096:8096/tcp",
				"8920:8920/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/emby/config"
			},
			{
				"container": "/data/tvshows",
				"bind": "/volume1/docker/emby/data/tvshows"
			},
			{
				"container": "/data/movies",
				"bind": "/volume1/docker/emby/data/movies"
			},
			{
				"container": "/opt/vc/lib",
				"bind": "/opt/vc/lib"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Embystat",
			"name": "Embystat",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/embystat/config</p>",
			"description": "[Embystat](https://github.com/mregni/EmbyStat) is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/embystat-logo.png",
			"image": "linuxserver/embystat:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"6555:6555/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/embystat/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Emulatorjs",
			"name": "Emulatorjs",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/emulatorjs/config<br>mkdir -p /volume1/docker/emulatorjs/data</p>",
			"description": "[Emulatorjs](https://github.com/linuxserver/emulatorjs) - In browser web based emulation portable to nearly any device for many retro consoles. A mix of emulators is used between Libretro and EmulatorJS.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emulatorjs-logo.png",
			"image": "linuxserver/emulatorjs:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "SUBFOLDER",
					"label": "SUBFOLDER",
					"default": "/",
					"description": "Specify a subfolder for reverse proxies IE '/FOLDER/'"
				}
			],
			"ports": [
				"3000:3000/tcp",
				"80:80/tcp",
				"4001:4001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/emulatorjs/config"
			},
			{
				"container": "/data",
				"bind": "/volume1/docker/emulatorjs/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Endlessh",
			"name": "Endlessh",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/endlessh/config</p>",
			"description": "[Endlessh](https://github.com/skeeto/endlessh) is an SSH tarpit that very slowly sends an endless, random SSH banner. It keeps SSH clients locked up for hours or even days at a time. The purpose is to put your real SSH server on another port and then let the script kiddies get stuck in this tarpit instead of bothering a real server.",
			"platform": "linux",
			"logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/openssh-server-logo.png",
			"image": "linuxserver/endlessh:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "MSDELAY",
					"label": "MSDELAY",
					"default": "10000",
					"description": "The endless banner is sent one line at a time. This is the delay in milliseconds between individual lines."
				},
				{
					"name": "MAXLINES",
					"label": "MAXLINES",
					"default": "32",
					"description": "The length of each line is randomized. This controls the maximum length of each line. Shorter lines may keep clients on for longer if they give up after a certain number of bytes."
				},
				{
					"name": "MAXCLIENTS",
					"label": "MAXCLIENTS",
					"default": "4096",
					"description": "Maximum number of connections to accept at a time. Connections beyond this are not immediately rejected, but will wait in the queue."
				},
				{
					"name": "LOGFILE",
					"label": "LOGFILE",
					"default": "false",
					"description": "By default, the app logs to container log. If this is set to `true`, the log will be output to file under `/config/logs/endlessh` (`/config` needs to be mapped)."
				},
				{
					"name": "BINDFAMILY",
					"label": "BINDFAMILY",
					"default": "",
					"description": "By default, the app binds to IPv4 and IPv6 addresses. Set it to `4` or `6` to bind to IPv4 only or IPv6 only, respectively. Leave blank to bind to both."
				}
			],
			"ports": [
				"22:2222/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/endlessh/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Fail2ban",
			"name": "Fail2ban",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/fail2ban/config<br>mkdir -p /volume1/docker/fail2ban/var/log:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/airsonic:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/apache2:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/authelia:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/emby:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/filebrowser:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/homeassistant:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/lighttpd:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/nextcloud:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/nginx:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/nzbget:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/overseerr:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/prowlarr:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/radarr:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/sabnzbd:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/sonarr:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/unificontroller:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/vaultwarden:ro</p>",
			"description": "[Fail2ban](http://www.fail2ban.org/) is a daemon to ban hosts that cause multiple authentication errors.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/fail2ban-logo.png",
			"image": "linuxserver/fail2ban:latest",
			"network": "host",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "VERBOSITY",
					"label": "VERBOSITY",
					"default": "-vv",
					"description": "Set the container log verbosity. Valid options are -v, -vv, -vvv, -vvvv, or leaving the value blank or not setting the variable."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/fail2ban/config"
			},
			{
				"container": "/var/log:ro",
				"bind": "/volume1/docker/fail2ban/var/log:ro"
			},
			{
				"container": "/remotelogs/airsonic:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/airsonic:ro"
			},
			{
				"container": "/remotelogs/apache2:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/apache2:ro"
			},
			{
				"container": "/remotelogs/authelia:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/authelia:ro"
			},
			{
				"container": "/remotelogs/emby:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/emby:ro"
			},
			{
				"container": "/remotelogs/filebrowser:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/filebrowser:ro"
			},
			{
				"container": "/remotelogs/homeassistant:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/homeassistant:ro"
			},
			{
				"container": "/remotelogs/lighttpd:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/lighttpd:ro"
			},
			{
				"container": "/remotelogs/nextcloud:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/nextcloud:ro"
			},
			{
				"container": "/remotelogs/nginx:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/nginx:ro"
			},
			{
				"container": "/remotelogs/nzbget:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/nzbget:ro"
			},
			{
				"container": "/remotelogs/overseerr:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/overseerr:ro"
			},
			{
				"container": "/remotelogs/prowlarr:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/prowlarr:ro"
			},
			{
				"container": "/remotelogs/radarr:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/radarr:ro"
			},
			{
				"container": "/remotelogs/sabnzbd:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/sabnzbd:ro"
			},
			{
				"container": "/remotelogs/sonarr:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/sonarr:ro"
			},
			{
				"container": "/remotelogs/unificontroller:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/unificontroller:ro"
			},
			{
				"container": "/remotelogs/vaultwarden:ro",
				"bind": "/volume1/docker/fail2ban/remotelogs/vaultwarden:ro"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Faster-whisper",
			"name": "Faster-whisper",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/faster-whisper/config</p>",
			"description": "[Faster-whisper](https://github.com/SYSTRAN/faster-whisper) is a reimplementation of OpenAI's Whisper model using CTranslate2, which is a fast inference engine for Transformer models. This container provides a Wyoming protocol server for faster-whisper.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/faster-whisper-logo.png",
			"image": "linuxserver/faster-whisper:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "WHISPER_MODEL",
					"label": "WHISPER_MODEL",
					"default": "tiny-int8",
					"description": "Whisper model that will be used for transcription. From `tiny`, `base`, `small` and `medium.en`, all with `-int8` compressed variants"
				},
				{
					"name": "WHISPER_BEAM",
					"label": "WHISPER_BEAM",
					"default": "1",
					"description": "Number of candidates to consider simultaneously during transcription."
				},
				{
					"name": "WHISPER_LANG",
					"label": "WHISPER_LANG",
					"default": "en",
					"description": "Language that you will speak to the add-on."
				}
			],
			"ports": [
				"10300:10300/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/faster-whisper/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Feed2toot",
			"name": "Feed2toot",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/feed2toot/config</p>",
			"description": "[Feed2toot](https://gitlab.com/chaica/feed2toot) automatically parses rss feeds, identifies new posts and posts them on the Mastodon social network.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/feed2toot-banner.png",
			"image": "linuxserver/feed2toot:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "FEED_LIMIT",
					"label": "FEED_LIMIT",
					"default": "5",
					"description": "Limit number of RSS entries published at each execution."
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/feed2toot/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ferdium",
			"name": "Ferdium",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ferdium/config</p>",
			"description": "[Ferdium](https://ferdium.org/) is a desktop app that helps you organize how you use your favourite apps by combining them into one application.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ferdium-logo.png",
			"image": "linuxserver/ferdium:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/ferdium/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ffmpeg",
			"name": "Ffmpeg",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ffmpeg/config</p>",
			"description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/ffmpeg for details.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/ffmpeg:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/ffmpeg/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Filezilla",
			"name": "Filezilla",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/filezilla/config</p>",
			"description": "[FIleZilla](https://filezilla-project.org/) Client is a fast and reliable cross-platform FTP, FTPS and SFTP client with lots of useful features and an intuitive graphical user interface.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/filezilla-logo.png",
			"image": "linuxserver/filezilla:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/filezilla/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Firefox",
			"name": "Firefox",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/firefox/config</p>",
			"description": "[Firefox](https://www.mozilla.org/en-US/firefox/) Browser, also known as Mozilla Firefox or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/firefox-logo.png",
			"image": "linuxserver/firefox:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/firefox/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Fleet",
			"name": "Fleet",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/fleet/config</p>",
			"description": "[Fleet](https://github.com/linuxserver/fleet) provides an online web interface which displays a set of maintained images from one or more owned repositories.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/fleet:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "fleet_admin_authentication_type",
					"label": "fleet_admin_authentication_type",
					"default": "DATABASE",
					"description": "A switch to define how Fleet manages user logins. If set to DATABASE, see the related optional params. Can be set to either DATABASE or PROPERTIES."
				},
				{
					"name": "fleet_database_url",
					"label": "fleet_database_url",
					"default": "jdbc:mariadb://<url>:3306/fleet",
					"description": "The full JDBC connection string to the Fleet database"
				},
				{
					"name": "fleet_database_username",
					"label": "fleet_database_username",
					"default": "fleet_user",
					"description": "The username with the relevant GRANT permissions for the database"
				},
				{
					"name": "fleet_database_password",
					"label": "fleet_database_password",
					"default": "dbuserpassword",
					"description": "The database user's password."
				},
				{
					"name": "fleet_admin_secret",
					"label": "fleet_admin_secret",
					"default": "randomstring",
					"description": "A string used as part of the password key derivation process."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/fleet/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Flexget",
			"name": "Flexget",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/flexget/config<br>mkdir -p /volume1/docker/flexget/data</p>",
			"description": "[Flexget](http://flexget.com/) is a multipurpose automation tool for all of your media.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/flexget-banner.png",
			"image": "linuxserver/flexget:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "FG_LOG_LEVEL",
					"label": "FG_LOG_LEVEL",
					"default": "info",
					"description": "Set the FlexGet logging level."
				},
				{
					"name": "FG_LOG_FILE",
					"label": "FG_LOG_FILE",
					"default": "/config/flexget.log",
					"description": "Set the FlexGet log file location."
				},
				{
					"name": "FG_CONFIG_FILE",
					"label": "FG_CONFIG_FILE",
					"default": "/config/.flexget/config.yml",
					"description": "Set the FlexGet config file location."
				},
				{
					"name": "FG_WEBUI_PASSWORD",
					"label": "FG_WEBUI_PASSWORD",
					"default": "info",
					"description": "Set the FlexGet webui password. Pay attention to Bash/YAML reserved characters."
				}
			],
			"ports": [
				"5050:5050/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/flexget/config"
			},
			{
				"container": "/data",
				"bind": "/volume1/docker/flexget/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Foldingathome",
			"name": "Foldingathome",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/foldingathome/config</p>",
			"description": "[Folding@home](https://foldingathome.org/) is a distributed computing project for simulating protein dynamics, including the process of protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen scientists who volunteer to run simulations of protein dynamics on their personal computers. Insights from this data are helping scientists to better understand biology, and providing new opportunities for developing therapeutics.",
			"platform": "linux",
			"logo": "https://foldingathome.org/wp-content/uploads/2016/09/folding-at-home-logo.png",
			"image": "linuxserver/foldingathome:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"7396:7396/tcp",
				"36330:36330/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/foldingathome/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Freecad",
			"name": "Freecad",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/freecad/config</p>",
			"description": "[FreeCAD](https://www.freecad.org/) is a general-purpose parametric 3D computer-aided design (CAD) modeler and a building information modeling (BIM) software application with finite element method (FEM) support.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/freecad-logo.png",
			"image": "linuxserver/freecad:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/freecad/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Freshrss",
			"name": "Freshrss",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/freshrss/config</p>",
			"description": "[Freshrss](https://freshrss.org/) is a free, self-hostable aggregator for rss feeds.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/freshrss-banner.png",
			"image": "linuxserver/freshrss:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/freshrss/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Gimp",
			"name": "Gimp",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/gimp/config</p>",
			"description": "[GIMP](https://www.gimp.org/) is a free and open-source raster graphics editor used for image manipulation (retouching) and image editing, free-form drawing, transcoding between different image file formats, and more specialized tasks. It is extensible by means of plugins, and scriptable.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/gimp-logo.png",
			"image": "linuxserver/gimp:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/gimp/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Github-desktop",
			"name": "Github-desktop",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/github-desktop/config</p>",
			"description": "[Github Desktop](https://desktop.github.com/) is an open source Electron-based GitHub app. It is written in TypeScript and uses React.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/github-desktop-icon.png",
			"image": "linuxserver/github-desktop:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/github-desktop/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Gitqlient",
			"name": "Gitqlient",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/gitqlient/config</p>",
			"description": "[GitQlient](https://github.com/francescmm/GitQlient) is a multi-platform Git client originally forked from QGit. Nowadays it goes beyond of just a fork and adds a lot of new functionality.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/gitqlient-icon.png",
			"image": "linuxserver/gitqlient:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/gitqlient/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Grav",
			"name": "Grav",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/grav/config</p>",
			"description": "[Grav](https://github.com/getgrav/grav/) is a Fast, Simple, and Flexible, file-based Web-platform.",
			"categories": [
				"Web Platform"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/grav-logo.png",
			"image": "linuxserver/grav:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/grav/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Grocy",
			"name": "Grocy",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/grocy/config</p>",
			"description": "[Grocy](https://github.com/grocy/grocy) is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utility. Keep track of your purchases, how much food you are wasting, what chores need doing and what batteries need charging with this proudly Open Source tool For more information on grocy visit their website and check it out: https://grocy.info",
			"platform": "linux",
			"logo": "https://grocy.info/img/grocy_logo.svg",
			"image": "linuxserver/grocy:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"9283:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/grocy/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Habridge",
			"name": "Habridge",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/habridge/config</p>",
			"description": "[Habridge](https://bwssystems.com/#!/habridge) emulates Philips Hue API to other home automation gateways such as an Amazon Echo/Dot Gen 1 (gen 2 has issues discovering ha-bridge) or other systems that support Philips Hue. The Bridge handles basic commands such as 'On', 'Off' and 'brightness' commands of the hue protocol. This bridge can control most devices that have a distinct API. In the cases of systems that require authorization and/or have APIs that cannot be handled in the current method, a module may need to be built. The Harmony Hub is such a module and so is the Nest module. The Bridge has helpers to build devices for the gateway for the Logitech Harmony Hub, Vera, Vera Lite or Vera Edge, Nest, Somfy Tahoma, Home Assistant, Domoticz, MQTT, HAL, Fibaro, HomeWizard, LIFX, OpenHAB, FHEM, Broadlink and the ability to proxy all of your real Hue bridges behind this bridge. This bridge was built to help put the Internet of Things together. For more information about how to use this software have a look at their Wiki [https://github.com/bwssytems/ha-bridge/wiki](https://github.com/bwssytems/ha-bridge/wiki)",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/bwssytems/ha-bridge/master/src/main/resources/public/img/favicon.ico",
			"image": "linuxserver/habridge:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "SEC_KEY",
					"label": "SEC_KEY",
					"default": "<Your Key To Encrypt Security Data>",
					"description": "Key used to secure communication."
				}
			],
			"ports": [
				"8080:8080/tcp",
				"50000:50000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/habridge/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Healthchecks",
			"name": "Healthchecks",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/healthchecks/config</p>",
			"description": "[Healthchecks](https://github.com/healthchecks/healthchecks) is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/healthchecks/healthchecks/master/static/img/welcome.png",
			"image": "linuxserver/healthchecks:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "SITE_ROOT",
					"label": "SITE_ROOT",
					"default": "",
					"description": "The site's top-level URL and the port it listens to if differrent than 80 or 443 (e.g., https://healthchecks.example.com:8000)"
				},
				{
					"name": "SITE_NAME",
					"label": "SITE_NAME",
					"default": "",
					"description": "The site's name (e.g., 'Example Corp HealthChecks')"
				},
				{
					"name": "DEFAULT_FROM_EMAIL",
					"label": "DEFAULT_FROM_EMAIL",
					"default": "",
					"description": "From email for alerts"
				},
				{
					"name": "EMAIL_HOST",
					"label": "EMAIL_HOST",
					"default": "",
					"description": "SMTP host"
				},
				{
					"name": "EMAIL_PORT",
					"label": "EMAIL_PORT",
					"default": "",
					"description": "SMTP port"
				},
				{
					"name": "EMAIL_HOST_USER",
					"label": "EMAIL_HOST_USER",
					"default": "",
					"description": "SMTP user"
				},
				{
					"name": "EMAIL_HOST_PASSWORD",
					"label": "EMAIL_HOST_PASSWORD",
					"default": "",
					"description": "SMTP password"
				},
				{
					"name": "EMAIL_USE_TLS",
					"label": "EMAIL_USE_TLS",
					"default": "",
					"description": "Use TLS for SMTP (`True` or `False`)"
				},
				{
					"name": "SUPERUSER_EMAIL",
					"label": "SUPERUSER_EMAIL",
					"default": "",
					"description": "Superuser email"
				},
				{
					"name": "SUPERUSER_PASSWORD",
					"label": "SUPERUSER_PASSWORD",
					"default": "",
					"description": "Superuser password"
				},
				{
					"name": "REGENERATE_SETTINGS",
					"label": "REGENERATE_SETTINGS",
					"default": "",
					"description": "Defaults to False. Set to True to always override the `local_settings.py` file with values from environment variables. Do not set to True if you have made manual modifications to this file."
				},
				{
					"name": "ALLOWED_HOSTS",
					"label": "ALLOWED_HOSTS",
					"default": "",
					"description": "A [list](https://docs.python.org/3/tutorial/introduction.html#lists) of valid hostnames for the server. Default is: `['*']`"
				},
				{
					"name": "CSRF_TRUSTED_ORIGINS",
					"label": "CSRF_TRUSTED_ORIGINS",
					"default": "",
					"description": "A [list](https://docs.python.org/3/tutorial/introduction.html#lists) of trusted origins for unsafe requests (e.g. POST). Defaults to the value of `SITE_ROOT`."
				},
				{
					"name": "APPRISE_ENABLED",
					"label": "APPRISE_ENABLED",
					"default": "",
					"description": "Defaults to False. A boolean that turns on/off the Apprise integration (https://github.com/caronc/apprise)"
				},
				{
					"name": "DEBUG",
					"label": "DEBUG",
					"default": "",
					"description": "Defaults to True. Debug mode relaxes CSRF protections and increases logging verbosity but should be disabled for production instances as it will impact performance and security."
				},
				{
					"name": "INTEGRATIONS_ALLOW_PRIVATE_IPS",
					"label": "INTEGRATIONS_ALLOW_PRIVATE_IPS",
					"default": "",
					"description": "Defaults to False. Set to True to allow integrations to connect to private IP addresses."
				},
				{
					"name": "PING_EMAIL_DOMAIN",
					"label": "PING_EMAIL_DOMAIN",
					"default": "",
					"description": "The domain to use for generating ping email addresses."
				},
				{
					"name": "SECRET_KEY",
					"label": "SECRET_KEY",
					"default": "",
					"description": "A secret key used for cryptographic signing. Will generate a secure value if one is not supplied"
				},
				{
					"name": "SITE_LOGO_URL",
					"label": "SITE_LOGO_URL",
					"default": "",
					"description": "Full URL to custom site logo"
				}
			],
			"ports": [
				"8000:8000/tcp",
				"2525:2525/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/healthchecks/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Hedgedoc",
			"name": "Hedgedoc",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/hedgedoc/config</p>",
			"description": "[HedgeDoc](https://hedgedoc.org/) gives you access to all your files wherever you are. HedgeDoc is a real-time, multi-platform collaborative markdown note editor. This means that you can write notes with other people on your desktop, tablet or even on the phone. You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.",
			"categories": [
				"Documentation"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hedgedoc-banner.png",
			"image": "linuxserver/hedgedoc:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "DB_HOST",
					"label": "DB_HOST",
					"default": "<hostname or ip>",
					"description": "Host address of mysql database"
				},
				{
					"name": "DB_PORT",
					"label": "DB_PORT",
					"default": "3306",
					"description": "Port to access mysql database default is 3306"
				},
				{
					"name": "DB_USER",
					"label": "DB_USER",
					"default": "hedgedoc",
					"description": "Database user"
				},
				{
					"name": "DB_PASS",
					"label": "DB_PASS",
					"default": "<secret password>",
					"description": "Database password"
				},
				{
					"name": "DB_NAME",
					"label": "DB_NAME",
					"default": "hedgedoc",
					"description": "Database name"
				},
				{
					"name": "CMD_DOMAIN",
					"label": "CMD_DOMAIN",
					"default": "localhost",
					"description": "The address the gui will be accessed at (ie. `192.168.1.1` or `hedgedoc.domain.com`)."
				},
				{
					"name": "CMD_URL_ADDPORT",
					"label": "CMD_URL_ADDPORT",
					"default": "false",
					"description": "Set to `true` if using a port other than `80` or `443`."
				},
				{
					"name": "CMD_PROTOCOL_USESSL",
					"label": "CMD_PROTOCOL_USESSL",
					"default": "false",
					"description": "Set to `true` if accessing over https via reverse proxy."
				},
				{
					"name": "CMD_PORT",
					"label": "CMD_PORT",
					"default": "3000",
					"description": "If you wish to access hedgedoc at a port different than 80, 443 or 3000, you need to set this to that port (ie. `CMD_PORT=5000`) and change the port mapping accordingly (5000:5000)."
				},
				{
					"name": "CMD_ALLOW_ORIGIN",
					"label": "CMD_ALLOW_ORIGIN",
					"default": "['localhost']",
					"description": "Comma-separated list of allowed hostnames"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/hedgedoc/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Heimdall",
			"name": "Heimdall",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/heimdall/config</p>",
			"description": "[Heimdall](https://heimdall.site) is a way to organise all those links to your most used web sites and web applications in a simple way. Simplicity is the key to Heimdall. Why not use it as your browser start page? It even has the ability to include a search bar using either Google, Bing or DuckDuckGo.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/heimdall-banner.png",
			"image": "linuxserver/heimdall:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/heimdall/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Hishtory-server",
			"name": "Hishtory-server",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
			"description": "[hiSHtory](https://github.com/ddworken/hishtory) is a better shell history. It stores your shell history in context (what directory you ran the command in, whether it succeeded or failed, how long it took, etc). This is all stored locally and end-to-end encrypted for syncing to to all your other computers.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hishtory-server-icon.png",
			"image": "linuxserver/hishtory-server:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "HISHTORY_POSTGRES_DB",
					"label": "HISHTORY_POSTGRES_DB",
					"default": "postgresql://${HISHTORY_DB_USER}:${HISHTORY_DB_PASS}@hishtory-db:5432/hishtory?sslmode=disable",
					"description": "Postgres DB [Connection URI](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING). Special characters must be [URL encoded](https://en.wikipedia.org/wiki/URL_encoding)."
				},
				{
					"name": "HISHTORY_SQLITE_DB",
					"label": "HISHTORY_SQLITE_DB",
					"default": "/config/hishtory.db",
					"description": "SQLite database path. Needs to be a mounted volume for persistence. Don't set at the same time as HISHTORY_POSTGRES_DB."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Homeassistant",
			"name": "Homeassistant",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/homeassistant/config</p>",
			"description": "[Home Assistant Core](https://www.home-assistant.io/) - Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.",
			"categories": [
				"Home Automation"
			],
			"platform": "linux",
			"logo": "https://github.com/home-assistant/home-assistant.io/raw/next/source/images/favicon-192x192-full.png",
			"image": "linuxserver/homeassistant:latest",
			"network": "host",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8123:8123/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/homeassistant/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Htpcmanager",
			"name": "Htpcmanager",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/htpcmanager/config</p>",
			"description": "[Htpcmanager](https://github.com/HTPC-Manager/HTPC-Manager) is a front end for many htpc related applications.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/htpcmanager-icon.png",
			"image": "linuxserver/htpcmanager:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8085:8085/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/htpcmanager/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Inkscape",
			"name": "Inkscape",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/inkscape/config</p>",
			"description": "[Inkscape](https://inkscape.org/) is professional quality vector graphics software which runs on Linux, Mac OS X and Windows desktop computers.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/inkscape-logo.png",
			"image": "linuxserver/inkscape:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/inkscape/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Jackett",
			"name": "Jackett",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/jackett/config<br>mkdir -p /volume1/docker/jackett/downloads</p>",
			"description": "[Jackett](https://github.com/Jackett/Jackett) works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping & translation logic - removing the burden from other apps.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jackett-banner.png",
			"image": "linuxserver/jackett:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "AUTO_UPDATE",
					"label": "AUTO_UPDATE",
					"default": "true",
					"description": "Allow Jackett to update inside of the container (currently recommended by Jackett and enabled by default)"
				},
				{
					"name": "RUN_OPTS",
					"label": "RUN_OPTS",
					"default": "",
					"description": "Optionally specify additional arguments to be passed."
				}
			],
			"ports": [
				"9117:9117/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/jackett/config"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/jackett/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Jellyfin",
			"name": "Jellyfin",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/jellyfin/config<br>mkdir -p /volume1/docker/jellyfin/data/tvshows<br>mkdir -p /volume1/docker/jellyfin/data/movies</p>",
			"description": "[Jellyfin](https://github.com/jellyfin/jellyfin) is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/banner-logo-solid.svg?sanitize=true",
			"image": "linuxserver/jellyfin:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "JELLYFIN_PublishedServerUrl",
					"label": "JELLYFIN_PublishedServerUrl",
					"default": "192.168.0.5",
					"description": "Set the autodiscovery response domain or IP address."
				}
			],
			"ports": [
				"8096:8096/tcp",
				"8920:8920/tcp",
				"7359:7359/udp",
				"1900:1900/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/jellyfin/config"
			},
			{
				"container": "/data/tvshows",
				"bind": "/volume1/docker/jellyfin/data/tvshows"
			},
			{
				"container": "/data/movies",
				"bind": "/volume1/docker/jellyfin/data/movies"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Jenkins-builder",
			"name": "Jenkins-builder",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/jenkins-builder/config</p>",
			"description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/jenkins-builder for details.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/jenkins-builder:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/jenkins-builder/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Kasm",
			"name": "Kasm",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/kasm/opt<br>mkdir -p /volume1/docker/kasm/profiles<br><br></p>",
			"description": "[Kasm](https://www.kasmweb.com/?utm_campaign=LinuxServer&utm_source=listing) Workspaces is a docker container streaming platform for delivering browser-based access to desktops, applications, and web services. Kasm uses devops-enabled Containerized Desktop Infrastructure (CDI) to create on-demand, disposable, docker containers that are accessible via web browser. Example use-cases include Remote Browser Isolation (RBI), Data Loss Prevention (DLP), Desktop as a Service (DaaS), Secure Remote Access Services (RAS), and Open Source Intelligence (OSINT) collections. The rendering of the graphical-based containers is powered by the open-source project [KasmVNC](https://www.kasmweb.com/kasmvnc.html?utm_campaign=LinuxServer&utm_source=kasmvnc).",
			"platform": "linux",
			"logo": "https://kasm-ci.s3.amazonaws.com/kasm_wide.png",
			"image": "linuxserver/kasm:latest",
			"privileged": true,
			"env": [
				{
					"name": "KASM_PORT",
					"label": "KASM_PORT",
					"default": "443",
					"description": "Specify the port you bind to the outside for Kasm Workspaces."
				},
				{
					"name": "DOCKER_HUB_USERNAME",
					"label": "DOCKER_HUB_USERNAME",
					"default": "USER",
					"description": "Optionally specify a DockerHub Username to pull private images."
				},
				{
					"name": "DOCKER_HUB_PASSWORD",
					"label": "DOCKER_HUB_PASSWORD",
					"default": "PASS",
					"description": "Optionally specify a DockerHub password to pull private images."
				},
				{
					"name": "DOCKER_MTU",
					"label": "DOCKER_MTU",
					"default": "1500",
					"description": "Optionally specify the mtu options passed to dockerd."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/opt",
				"bind": "/volume1/docker/kasm/opt"
			},
			{
				"container": "/profiles",
				"bind": "/volume1/docker/kasm/profiles"
			},
			{
				"container": "/dev/input",
				"bind": "/dev/input"
			},
			{
				"container": "/run/udev/data",
				"bind": "/run/udev/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Kavita",
			"name": "Kavita",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/kavita/config<br>mkdir -p /volume1/docker/kavita/data</p>",
			"description": "[Kavita](https://github.com/Kareadita/Kavita) is a fast, feature rich, cross platform reading server. Built with a focus for being a full solution for all your reading needs. Setup your own server and share your reading collection with your friends and family!",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kavita-logo.png",
			"image": "linuxserver/kavita:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"5000:5000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/kavita/config"
			},
			{
				"container": "/data",
				"bind": "/volume1/docker/kavita/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Kdenlive",
			"name": "Kdenlive",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/kdenlive/config</p>",
			"description": "[Kdenlive](https://kdenlive.org/) is a powerful free and open source cross-platform video editing program made by the KDE community. Feature rich and production ready.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kdenlive-logo.png",
			"image": "linuxserver/kdenlive:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "SUBFOLDER",
					"label": "SUBFOLDER",
					"default": "/",
					"description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/kdenlive/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Kicad",
			"name": "Kicad",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/kicad/config</p>",
			"description": "[KiCad](https://www.kicad.org/) - A Cross Platform and Open Source Electronics Design Automation Suite.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kicad-logo.png",
			"image": "linuxserver/kicad:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/kicad/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Kimai",
			"name": "Kimai",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/kimai/config</p>",
			"description": "[Kimai](https://kimai.org/) is a professional grade time-tracking application, free and open-source. It handles use-cases of freelancers as well as companies with dozens or hundreds of users. Kimai was build to track your project times and ships with many advanced features, including but not limited to: JSON API, invoicing, data exports, multi-timer and punch-in punch-out mode, tagging, multi-user - multi-timezones - multi-language ([over 30 translations existing](https://hosted.weblate.org/projects/kimai/)!), authentication via SAML/LDAP/Database, two-factor authentication (2FA) with TOTP, customizable role and team permissions, responsive design, user/customer/project specific rates, advanced search & filtering, money and time budgets, advanced reporting, support for [plugins](https://www.kimai.org/store/) and so much more.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kimai-logo.png",
			"image": "linuxserver/kimai:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "DATABASE_URL",
					"label": "DATABASE_URL",
					"default": "mysql://your_db_user:your_db_pass@your_db_host:3306/your_db_name?charset=your_db_charset&serverVersion=your_db_version",
					"description": "Configure your database connection, see Application Setup instructions."
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/kimai/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Krita",
			"name": "Krita",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/krita/config</p>",
			"description": "[Krita](https://krita.org/en/) is a professional FREE and open source painting program. It is made by artists that want to see affordable art tools for everyone.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/krita-logo.png",
			"image": "linuxserver/krita:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/krita/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Lazylibrarian",
			"name": "Lazylibrarian",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/lazylibrarian/config<br>mkdir -p /volume1/docker/lazylibrarian/downloads<br>mkdir -p /volume1/docker/lazylibrarian/books</p>",
			"description": "[Lazylibrarian](https://lazylibrarian.gitlab.io/) is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. This container is based on the DobyTang fork.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lazylibrarian-icon.png",
			"image": "linuxserver/lazylibrarian:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "DOCKER_MODS",
					"label": "DOCKER_MODS",
					"default": "linuxserver/mods:universal-calibre|linuxserver/mods:lazylibrarian-ffmpeg",
					"description": "Allows additional functionality to be added, e.g. the Calibredb import program (optional, more info below)"
				}
			],
			"ports": [
				"5299:5299/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/lazylibrarian/config"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/lazylibrarian/downloads"
			},
			{
				"container": "/books",
				"bind": "/volume1/docker/lazylibrarian/books"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ldap-auth",
			"name": "Ldap-auth",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
			"description": "[Ldap-auth](https://github.com/nginxinc/nginx-ldap-auth) software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user’s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ldap-auth-logo.png",
			"image": "linuxserver/ldap-auth:latest",
			"env": [
				{
					"name": "FERNETKEY",
					"label": "FERNETKEY",
					"default": "",
					"description": "Optionally define a custom valid fernet key (only needed if container is frequently recreated, or if using multi-node setups, invalidating previous authentications)"
				},
				{
					"name": "CERTFILE",
					"label": "CERTFILE",
					"default": "",
					"description": "Optionally point this to a certificate file to enable HTTP over SSL (HTTPS) for the ldap auth daemon"
				},
				{
					"name": "KEYFILE",
					"label": "KEYFILE",
					"default": "",
					"description": "Optionally point this to the private key file, matching the certificate file referred to in CERTFILE"
				}
			],
			"ports": [
				"8888:8888/tcp",
				"9000:9000/tcp"
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Libreoffice",
			"name": "Libreoffice",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/libreoffice/config</p>",
			"description": "[LibreOffice](https://www.libreoffice.org/) is a free and powerful office suite, and a successor to OpenOffice.org (commonly known as OpenOffice). Its clean interface and feature-rich tools help you unleash your creativity and enhance your productivity.",
			"categories": [
				"Productivity"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libreoffice-logo.png",
			"image": "linuxserver/libreoffice:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/libreoffice/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Librespeed",
			"name": "Librespeed",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/librespeed/config</p>",
			"description": "[Librespeed](https://github.com/librespeed/speedtest) is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers. No Flash, No Java, No Websocket, No Bullshit.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/librespeed/speedtest/master/.logo/logo3.png",
			"image": "linuxserver/librespeed:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "PASSWORD",
					"label": "PASSWORD",
					"default": "PASSWORD",
					"description": "Set the password for the results database."
				},
				{
					"name": "CUSTOM_RESULTS",
					"label": "CUSTOM_RESULTS",
					"default": "false",
					"description": "(optional) set to `true` to enable custom results page in `/config/www/results/index.php`."
				},
				{
					"name": "DB_TYPE",
					"label": "DB_TYPE",
					"default": "sqlite",
					"description": "Defaults to `sqlite`, can also be set to `mysql` or `postgresql`."
				},
				{
					"name": "DB_NAME",
					"label": "DB_NAME",
					"default": "DB_NAME",
					"description": "Database name. Required for mysql and pgsql."
				},
				{
					"name": "DB_HOSTNAME",
					"label": "DB_HOSTNAME",
					"default": "DB_HOSTNAME",
					"description": "Database address. Required for mysql and pgsql."
				},
				{
					"name": "DB_USERNAME",
					"label": "DB_USERNAME",
					"default": "DB_USERNAME",
					"description": "Database username. Required for mysql and pgsql."
				},
				{
					"name": "DB_PASSWORD",
					"label": "DB_PASSWORD",
					"default": "DB_PASSWORD",
					"description": "Database password. Required for mysql and pgsql."
				},
				{
					"name": "DB_PORT",
					"label": "DB_PORT",
					"default": "DB_PORT",
					"description": "Database port. Required for mysql."
				},
				{
					"name": "IPINFO_APIKEY",
					"label": "IPINFO_APIKEY",
					"default": "ACCESS_TOKEN",
					"description": "Access token from ipinfo.io. Required for detailed IP information."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/librespeed/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Lidarr",
			"name": "Lidarr",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/lidarr/config<br>mkdir -p /volume1/docker/lidarr/music<br>mkdir -p /volume1/docker/lidarr/downloads</p>",
			"description": "[Lidarr](https://github.com/lidarr/Lidarr) is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
			"platform": "linux",
			"logo": "https://github.com/lidarr/Lidarr/raw/develop/Logo/400.png",
			"image": "linuxserver/lidarr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8686:8686/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/lidarr/config"
			},
			{
				"container": "/music",
				"bind": "/volume1/docker/lidarr/music"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/lidarr/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Limnoria",
			"name": "Limnoria",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/limnoria/config</p>",
			"description": "[Limnoria](https://github.com/ProgVal/limnoria) A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-limnoria/master/logo.png",
			"image": "linuxserver/limnoria:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/limnoria/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Lollypop",
			"name": "Lollypop",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/lollypop/config</p>",
			"description": "[Lollypop](https://wiki.gnome.org/Apps/Lollypop) is a lightweight modern music player designed to work excellently on the GNOME desktop environment.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lollypop-icon.png",
			"image": "linuxserver/lollypop:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/lollypop/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Lychee",
			"name": "Lychee",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/lychee/config<br>mkdir -p /volume1/docker/lychee/pictures</p>",
			"description": "[Lychee](https://lycheeorg.github.io/) is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.'",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lychee-icon.png",
			"image": "linuxserver/lychee:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "DB_CONNECTION",
					"label": "DB_CONNECTION",
					"default": "",
					"description": "DB type, from `sqlite`, `mysql`, `pqsql`."
				},
				{
					"name": "DB_HOST",
					"label": "DB_HOST",
					"default": "",
					"description": "DB server hostname. For `mysql` and `pgsql` only."
				},
				{
					"name": "DB_PORT",
					"label": "DB_PORT",
					"default": "",
					"description": "DB server port. For `mysql` and `pgsql` only."
				},
				{
					"name": "DB_USERNAME",
					"label": "DB_USERNAME",
					"default": "",
					"description": "DB user. For `mysql` and `pgsql` only."
				},
				{
					"name": "DB_PASSWORD",
					"label": "DB_PASSWORD",
					"default": "",
					"description": "DB password. For `mysql` and `pgsql` only."
				},
				{
					"name": "DB_DATABASE",
					"label": "DB_DATABASE",
					"default": "",
					"description": "Path to DB file for `sqlite`. DB name for `mysql` and `pgsql`."
				},
				{
					"name": "APP_NAME",
					"label": "APP_NAME",
					"default": "Lychee",
					"description": "The gallery name."
				},
				{
					"name": "APP_URL",
					"label": "APP_URL",
					"default": "",
					"description": "The URL you will use to access Lychee including protocol, and port where appropriate."
				},
				{
					"name": "TRUSTED_PROXIES",
					"label": "TRUSTED_PROXIES",
					"default": "",
					"description": "Set to the IP or netmask covering your reverse proxy, if running behind one. Set to `*` to trust all IPs (**do not** use `*` if exposed to the internet`)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/lychee/config"
			},
			{
				"container": "/pictures",
				"bind": "/volume1/docker/lychee/pictures"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Mariadb",
			"name": "Mariadb",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mariadb/config</p>",
			"description": "[Mariadb](https://mariadb.org/) is one of the most popular database servers. Made by the original developers of MySQL.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mariadb-git.png",
			"image": "linuxserver/mariadb:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "MYSQL_ROOT_PASSWORD",
					"label": "MYSQL_ROOT_PASSWORD",
					"default": "ROOT_ACCESS_PASSWORD",
					"description": "Set this to root password for installation (minimum 4 characters & non-alphanumeric passwords must be properly escaped)."
				},
				{
					"name": "MYSQL_DATABASE",
					"label": "MYSQL_DATABASE",
					"default": "USER_DB_NAME",
					"description": "Specify the name of a database to be created on image startup."
				},
				{
					"name": "MYSQL_USER",
					"label": "MYSQL_USER",
					"default": "MYSQL_USER",
					"description": "This user will have superuser access to the database specified by MYSQL_DATABASE (do not use root here)."
				},
				{
					"name": "MYSQL_PASSWORD",
					"label": "MYSQL_PASSWORD",
					"default": "DATABASE_PASSWORD",
					"description": "Set this to the password you want to use for you MYSQL_USER (minimum 4 characters & non-alphanumeric passwords must be properly escaped)."
				},
				{
					"name": "REMOTE_SQL",
					"label": "REMOTE_SQL",
					"default": "http://URL1/your.sql,https://URL2/your.sql",
					"description": "Set this to ingest sql files from an http/https endpoint (comma seperated array)."
				}
			],
			"ports": [
				"3306:3306/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/mariadb/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Mastodon",
			"name": "Mastodon",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mastodon/config</p>",
			"description": "[Mastodon](https://github.com/mastodon/mastodon/) is a free, open-source social network server based on ActivityPub where users can follow friends and discover new ones..",
			"categories": [
				"Social"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mastodon-banner.png",
			"image": "linuxserver/mastodon:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "LOCAL_DOMAIN",
					"label": "LOCAL_DOMAIN",
					"default": "example.com",
					"description": "This is the unique identifier of your server in the network. It cannot be safely changed later."
				},
				{
					"name": "REDIS_HOST",
					"label": "REDIS_HOST",
					"default": "redis",
					"description": "Redis server hostname"
				},
				{
					"name": "REDIS_PORT",
					"label": "REDIS_PORT",
					"default": "6379",
					"description": "Redis port"
				},
				{
					"name": "DB_HOST",
					"label": "DB_HOST",
					"default": "db",
					"description": "Postgres database hostname"
				},
				{
					"name": "DB_USER",
					"label": "DB_USER",
					"default": "mastodon",
					"description": "Postgres username"
				},
				{
					"name": "DB_NAME",
					"label": "DB_NAME",
					"default": "mastodon",
					"description": "Postgres db name"
				},
				{
					"name": "DB_PASS",
					"label": "DB_PASS",
					"default": "mastodon",
					"description": "Postgres password"
				},
				{
					"name": "DB_PORT",
					"label": "DB_PORT",
					"default": "5432",
					"description": "Portgres port"
				},
				{
					"name": "ES_ENABLED",
					"label": "ES_ENABLED",
					"default": "false",
					"description": "Enable or disable Elasticsearch (requires a separate ES instance)"
				},
				{
					"name": "SECRET_KEY_BASE",
					"label": "SECRET_KEY_BASE",
					"default": "",
					"description": "Browser session secret. Changing it will break all active browser sessions."
				},
				{
					"name": "OTP_SECRET",
					"label": "OTP_SECRET",
					"default": "",
					"description": "MFA secret. Changing it after initial setup will break two-factor authentication."
				},
				{
					"name": "VAPID_PRIVATE_KEY",
					"label": "VAPID_PRIVATE_KEY",
					"default": "",
					"description": "Push notification private key. Changing it after initial setup will break push notifications."
				},
				{
					"name": "VAPID_PUBLIC_KEY",
					"label": "VAPID_PUBLIC_KEY",
					"default": "",
					"description": "Push notification public key. Changing it after initial setup will break push notifications."
				},
				{
					"name": "SMTP_SERVER",
					"label": "SMTP_SERVER",
					"default": "mail.example.com",
					"description": "SMTP server for email notifications"
				},
				{
					"name": "SMTP_PORT",
					"label": "SMTP_PORT",
					"default": "25",
					"description": "SMTP server port"
				},
				{
					"name": "SMTP_LOGIN",
					"label": "SMTP_LOGIN",
					"default": "",
					"description": "SMTP username"
				},
				{
					"name": "SMTP_PASSWORD",
					"label": "SMTP_PASSWORD",
					"default": "",
					"description": "SMTP password"
				},
				{
					"name": "SMTP_FROM_ADDRESS",
					"label": "SMTP_FROM_ADDRESS",
					"default": "notifications@example.com",
					"description": "From address for emails send from Mastodon"
				},
				{
					"name": "S3_ENABLED",
					"label": "S3_ENABLED",
					"default": "false",
					"description": "Enable or disable S3 storage of uploaded files"
				},
				{
					"name": "WEB_DOMAIN",
					"label": "WEB_DOMAIN",
					"default": "mastodon.example.com",
					"description": "This can be set if you want your server identifier to be different to the subdomain hosting Mastodon. See [https://docs.joinmastodon.org/admin/config/#basic](https://docs.joinmastodon.org/admin/config/#basic)"
				},
				{
					"name": "ES_HOST",
					"label": "ES_HOST",
					"default": "es",
					"description": "Elasticsearch server hostname"
				},
				{
					"name": "ES_PORT",
					"label": "ES_PORT",
					"default": "9200",
					"description": "Elasticsearch port"
				},
				{
					"name": "ES_USER",
					"label": "ES_USER",
					"default": "elastic",
					"description": "Elasticsearch username"
				},
				{
					"name": "ES_PASS",
					"label": "ES_PASS",
					"default": "elastic",
					"description": "Elasticsearch password"
				},
				{
					"name": "S3_BUCKET",
					"label": "S3_BUCKET",
					"default": "",
					"description": "S3 bucket hostname"
				},
				{
					"name": "AWS_ACCESS_KEY_ID",
					"label": "AWS_ACCESS_KEY_ID",
					"default": "",
					"description": "S3 bucket access key ID"
				},
				{
					"name": "AWS_SECRET_ACCESS_KEY",
					"label": "AWS_SECRET_ACCESS_KEY",
					"default": "",
					"description": "S3 bucket secret access key"
				},
				{
					"name": "S3_ALIAS_HOST",
					"label": "S3_ALIAS_HOST",
					"default": "",
					"description": "Alternate hostname for object fetching if you are front the S3 connections."
				},
				{
					"name": "SIDEKIQ_ONLY",
					"label": "SIDEKIQ_ONLY",
					"default": "false",
					"description": "Only run the sidekiq service in this container instance. For large scale instances that need better queue handling."
				},
				{
					"name": "SIDEKIQ_QUEUE",
					"label": "SIDEKIQ_QUEUE",
					"default": "",
					"description": "The name of the sidekiq queue to run in this container. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-queues)."
				},
				{
					"name": "SIDEKIQ_DEFAULT",
					"label": "SIDEKIQ_DEFAULT",
					"default": "false",
					"description": "Set to `true` on the main container if you're running additional sidekiq instances. It will run the `default` queue."
				},
				{
					"name": "SIDEKIQ_THREADS",
					"label": "SIDEKIQ_THREADS",
					"default": "5",
					"description": "The number of threads for sidekiq to use. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-threads)."
				},
				{
					"name": "DB_POOL",
					"label": "DB_POOL",
					"default": "5",
					"description": "The size of the DB connection pool, must be *at least* the same as `SIDEKIQ_THREADS`. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-threads)."
				},
				{
					"name": "NO_CHOWN",
					"label": "NO_CHOWN",
					"default": "",
					"description": "Set to `true` to skip chown of /config on init. *READ THE APPLICATION NOTES BEFORE SETTING THIS*."
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/mastodon/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Mediaelch",
			"name": "Mediaelch",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mediaelch/config</p>",
			"description": "[MediaElch](https://github.com/Komet/MediaElch) is a MediaManager for Kodi. Information about Movies, TV Shows, Concerts and Music are stored as nfo files. Fanarts are downloaded automatically from fanart.tv. Using the nfo generator, MediaElch can be used with other MediaCenters as well.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mediaelch-logo.png",
			"image": "linuxserver/mediaelch:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/mediaelch/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Medusa",
			"name": "Medusa",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/medusa/config<br>mkdir -p /volume1/docker/medusa/downloads<br>mkdir -p /volume1/docker/medusa/tv</p>",
			"description": "[Medusa](https://pymedusa.com/) is an automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/medusa-icon.png",
			"image": "linuxserver/medusa:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8081:8081/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/medusa/config"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/medusa/downloads"
			},
			{
				"container": "/tv",
				"bind": "/volume1/docker/medusa/tv"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Minetest",
			"name": "Minetest",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/minetest/config/.minetest</p>",
			"description": "[Minetest](http://www.minetest.net/) (server) is a near-infinite-world block sandbox game and a game engine, inspired by InfiniMiner, Minecraft, and the like.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
			"image": "linuxserver/minetest:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "CLI_ARGS",
					"label": "CLI_ARGS",
					"default": "--gameid minetest --port 30000",
					"description": "Optionally specify any [CLI variables](https://wiki.minetest.net/Command_line) you want to launch the app with"
				}
			],
			"ports": [
				"30000:30000/udp"
			],
			"volumes": [
			{
				"container": "/config/.minetest",
				"bind": "/volume1/docker/minetest/config/.minetest"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Minisatip",
			"name": "Minisatip",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/minisatip/config</p>",
			"description": "[Minisatip](https://github.com/catalinii/minisatip) is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/minisatip-icon.png",
			"image": "linuxserver/minisatip:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "RUN_OPTS",
					"label": "RUN_OPTS",
					"default": "",
					"description": "Specify specific run params for minisatip"
				}
			],
			"ports": [
				"8875:8875/tcp",
				"554:554/tcp",
				"1900:1900/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/minisatip/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Monica",
			"name": "Monica",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/monica/config</p>",
			"description": "[Monica](https://github.com/monicahq/monica) is an open source personal relationship management system, that lets you document your life.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/monica-logo.png",
			"image": "linuxserver/monica:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "DB_HOST",
					"label": "DB_HOST",
					"default": "",
					"description": "Mariadb DB server hostname."
				},
				{
					"name": "DB_PORT",
					"label": "DB_PORT",
					"default": "",
					"description": "Mariadb DB server port."
				},
				{
					"name": "DB_USERNAME",
					"label": "DB_USERNAME",
					"default": "",
					"description": "Mariadb DB user."
				},
				{
					"name": "DB_PASSWORD",
					"label": "DB_PASSWORD",
					"default": "",
					"description": "Mariadb DB password."
				},
				{
					"name": "DB_DATABASE",
					"label": "DB_DATABASE",
					"default": "",
					"description": "Mariadb DB name."
				},
				{
					"name": "APP_URL",
					"label": "APP_URL",
					"default": "http://localhost:80",
					"description": "The URL you will use to access Monica including protocol, and port where appropriate."
				},
				{
					"name": "TRUSTED_PROXIES",
					"label": "TRUSTED_PROXIES",
					"default": "",
					"description": "Set to the IP or netmask covering your reverse proxy, if running behind one. Set to `*` to trust all IPs (**do not** use `*` if exposed to the internet`)."
				},
				{
					"name": "APP_ENV",
					"label": "APP_ENV",
					"default": "local",
					"description": "Set to `production` when exposing the container to anyone else; this also makes https mandatory."
				},
				{
					"name": "APP_DISABLE_SIGNUP",
					"label": "APP_DISABLE_SIGNUP",
					"default": "true",
					"description": "Set to `false` to enable new account sign-ups."
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/monica/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Mstream",
			"name": "Mstream",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mstream/config<br>mkdir -p /volume1/docker/mstream/music</p>",
			"description": "[Mstream](https://mstream.io/) is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. There are mobile apps available for both Android and iPhone.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mstream-icon.png",
			"image": "linuxserver/mstream:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/mstream/config"
			},
			{
				"container": "/music",
				"bind": "/volume1/docker/mstream/music"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Mullvad-browser",
			"name": "Mullvad-browser",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mullvad-browser/config</p>",
			"description": "The [Mullvad Browser](https://mullvad.net/en/browser) is a privacy-focused web browser developed in a collaboration between Mullvad VPN and the Tor Project. It’s designed to minimize tracking and fingerprinting. You could say it’s a Tor Browser to use without the Tor Network. Instead, you can use it with a trustworthy VPN.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mullvad-browser-logo.png",
			"image": "linuxserver/mullvad-browser:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "LOCAL_NET",
					"label": "LOCAL_NET",
					"default": "192.168.0.0/16",
					"description": "If using a VPN, set this to your local LAN IP range using CIDR notation. Without it you will be unable to access the web interface. If you have multiple ranges or a complex LAN setup you will need to manage this yourself in the wg0.conf, see the App Setup section for details."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/mullvad-browser/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Mylar3",
			"name": "Mylar3",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mylar3/config<br>mkdir -p /volume1/docker/mylar3/comics<br>mkdir -p /volume1/docker/mylar3/downloads</p>",
			"description": "[Mylar3](https://github.com/mylar3/mylar3) is an automated Comic Book downloader (cbr/cbz) for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mylar-icon.png",
			"image": "linuxserver/mylar3:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8090:8090/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/mylar3/config"
			},
			{
				"container": "/comics",
				"bind": "/volume1/docker/mylar3/comics"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/mylar3/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Mysql-workbench",
			"name": "Mysql-workbench",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mysql-workbench/config</p>",
			"description": "[MySQL Workbench](https://www.mysql.com/products/workbench/) is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mysql-workbench-icon.png",
			"image": "linuxserver/mysql-workbench:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/mysql-workbench/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Netbootxyz",
			"name": "Netbootxyz",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/netbootxyz/config<br>mkdir -p /volume1/docker/netbootxyz/assets</p>",
			"description": "[Netbootxyz](https://netboot.xyz) is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.",
			"platform": "linux",
			"logo": "https://netboot.xyz/images/netboot.xyz.gif",
			"image": "linuxserver/netbootxyz:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "MENU_VERSION",
					"label": "MENU_VERSION",
					"default": "1.9.9",
					"description": "Specify a specific version of boot files you want to use from NETBOOT.XYZ (unset pulls latest)"
				},
				{
					"name": "PORT_RANGE",
					"label": "PORT_RANGE",
					"default": "30000:30010",
					"description": "Specify the port range tftp will use for data transfers [(see Wikipedia)](https://en.wikipedia.org/wiki/Trivial_File_Transfer_Protocol#Details)"
				},
				{
					"name": "SUBFOLDER",
					"label": "SUBFOLDER",
					"default": "/",
					"description": "Specify a sobfolder if running this behind a reverse proxy (IE /proxy/)"
				}
			],
			"ports": [
				"3000:3000/tcp",
				"69:69/udp",
				"8080:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/netbootxyz/config"
			},
			{
				"container": "/assets",
				"bind": "/volume1/docker/netbootxyz/assets"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Netbox",
			"name": "Netbox",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/netbox/config</p>",
			"description": "[Netbox](https://github.com/netbox-community/netbox) is an IP address management (IPAM) and data center infrastructure management (DCIM) tool. Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. It is intended to function as a domain-specific source of truth for network operations.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/netbox-community/netbox/develop/docs/netbox_logo.svg",
			"image": "linuxserver/netbox:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "SUPERUSER_EMAIL",
					"label": "SUPERUSER_EMAIL",
					"default": "",
					"description": "Email address for `admin` account"
				},
				{
					"name": "SUPERUSER_PASSWORD",
					"label": "SUPERUSER_PASSWORD",
					"default": "",
					"description": "Password for `admin` account"
				},
				{
					"name": "ALLOWED_HOST",
					"label": "ALLOWED_HOST",
					"default": "",
					"description": "The hostname you will use to access the app (i.e., netbox.example.com)"
				},
				{
					"name": "DB_NAME",
					"label": "DB_NAME",
					"default": "",
					"description": "Database name (default: netbox)"
				},
				{
					"name": "DB_USER",
					"label": "DB_USER",
					"default": "",
					"description": "Database user"
				},
				{
					"name": "DB_PASSWORD",
					"label": "DB_PASSWORD",
					"default": "",
					"description": "Database password"
				},
				{
					"name": "DB_HOST",
					"label": "DB_HOST",
					"default": "",
					"description": "Database host (default: postgres)"
				},
				{
					"name": "DB_PORT",
					"label": "DB_PORT",
					"default": "",
					"description": "Database port (defaul: 5432)"
				},
				{
					"name": "REDIS_HOST",
					"label": "REDIS_HOST",
					"default": "",
					"description": "Redis host (default: redis)"
				},
				{
					"name": "REDIS_PORT",
					"label": "REDIS_PORT",
					"default": "",
					"description": "Redis port number (default: 6379)"
				},
				{
					"name": "REDIS_PASSWORD",
					"label": "REDIS_PASSWORD",
					"default": "",
					"description": "Redis password (default: none)"
				},
				{
					"name": "REDIS_DB_TASK",
					"label": "REDIS_DB_TASK",
					"default": "",
					"description": "Redis database ID for tasks (default: 0)"
				},
				{
					"name": "REDIS_DB_CACHE",
					"label": "REDIS_DB_CACHE",
					"default": "",
					"description": "Redis database ID for caching (default: 1)"
				},
				{
					"name": "BASE_PATH",
					"label": "BASE_PATH",
					"default": "",
					"description": "The path you will use to access the app (i.e., /netbox, optional, default: none)"
				},
				{
					"name": "REMOTE_AUTH_ENABLED",
					"label": "REMOTE_AUTH_ENABLED",
					"default": "",
					"description": "Enable remote authentication (optional, default: False)"
				},
				{
					"name": "REMOTE_AUTH_BACKEND",
					"label": "REMOTE_AUTH_BACKEND",
					"default": "",
					"description": "Python path to the custom Django authentication backend to use for external user authentication (optional, default: netbox.authentication.RemoteUserBackend)"
				},
				{
					"name": "REMOTE_AUTH_HEADER",
					"label": "REMOTE_AUTH_HEADER",
					"default": "",
					"description": "Name of the HTTP header which informs NetBox of the currently authenticated user. (optional, default: HTTP_REMOTE_USER)"
				},
				{
					"name": "REMOTE_AUTH_AUTO_CREATE_USER",
					"label": "REMOTE_AUTH_AUTO_CREATE_USER",
					"default": "",
					"description": "If true, NetBox will automatically create local accounts for users authenticated via a remote service (optional, default: False)"
				},
				{
					"name": "REMOTE_AUTH_DEFAULT_GROUPS",
					"label": "REMOTE_AUTH_DEFAULT_GROUPS",
					"default": "",
					"description": "The list of groups to assign a new user account when created using remote authentication (optional, default: [])"
				},
				{
					"name": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
					"label": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
					"default": "",
					"description": "A mapping of permissions to assign a new user account when created using remote authentication (optional, default: {})"
				}
			],
			"ports": [
				"8000:8000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/netbox/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Nextcloud",
			"name": "Nextcloud",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nextcloud/config<br>mkdir -p /volume1/docker/nextcloud/data</p>",
			"description": "[Nextcloud](https://nextcloud.com/) gives you access to all your files wherever you are. Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices. Through Nextcloud you also access, sync and share your existing data on that FTP drive at the office, a Dropbox or a NAS you have at home.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nextcloud-icon.png",
			"image": "linuxserver/nextcloud:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/nextcloud/config"
			},
			{
				"container": "/data",
				"bind": "/volume1/docker/nextcloud/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Nginx",
			"name": "Nginx",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nginx/config</p>",
			"description": "[Nginx](https://nginx.org/) is a simple webserver with php support. The config files reside in `/config` for easy user customization.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nginx-banner.png",
			"image": "linuxserver/nginx:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/nginx/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ngircd",
			"name": "Ngircd",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ngircd/config</p>",
			"description": "[Ngircd](https://ngircd.barton.de/) is a free, portable and lightweight Internet Relay Chat server for small or private networks, developed under the GNU General Public License (GPL). It is easy to configure, can cope with dynamic IP addresses, and supports IPv6, SSL-protected connections as well as PAM for authentication. It is written from scratch and not based on the original IRCd.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ngircd-logo.png",
			"image": "linuxserver/ngircd:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"6667:6667/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/ngircd/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Nzbhydra2",
			"name": "Nzbhydra2",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nzbhydra2/config<br>mkdir -p /volume1/docker/nzbhydra2/downloads</p>",
			"description": "[Nzbhydra2](https://github.com/theotherp/nzbhydra2) is a meta search application for NZB indexers, the 'spiritual successor' to NZBmegasearcH, and an evolution of the original application [NZBHydra](https://github.com/theotherp/nzbhydra). It provides easy access to a number of raw and newznab based indexers. The application NZBHydra 2 is replacing NZBHydra 1 and supports migrating from V1. Be wary that there may be some compatibility issues for those migrating from V1 to V2, so ensure you back up your old configuration before moving over to the new version. **NOTE:** The last version that supports migration is `linuxserver/nzbhydra2:v2.10.2-ls49`",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hydra-icon.png",
			"image": "linuxserver/nzbhydra2:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"5076:5076/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/nzbhydra2/config"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/nzbhydra2/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ombi",
			"name": "Ombi",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ombi/config</p>",
			"description": "[Ombi](https://ombi.io) allows you to host your own Plex Request and user management system. If you are sharing your Plex server with other users, allow them to request new content using an easy to manage interface! Manage all your requests for Movies and TV with ease, leave notes for the user and get notification when a user requests something. Allow your users to post issues against their requests so you know there is a problem with the audio etc. Even automatically send them weekly newsletters of new content that has been added to your Plex server!",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ombi.png",
			"image": "linuxserver/ombi:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "BASE_URL",
					"label": "BASE_URL",
					"default": "/ombi",
					"description": "Subfolder can optionally be defined as an env variable for reverse proxies. Keep in mind that once this value is defined, the gui setting for base url no longer works. To use the gui setting, remove this env variable."
				}
			],
			"ports": [
				"3579:3579/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/ombi/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Openssh-server",
			"name": "Openssh-server",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/openssh-server/config</p>",
			"description": "[Openssh-server](https://www.openssh.com/) is a sandboxed environment that allows ssh access without giving keys to the entire server. Giving ssh access via private key often means giving full access to the server. This container creates a limited and sandboxed environment that others can ssh into. The users only have access to the folders mapped and the processes running inside this container.",
			"platform": "linux",
			"logo": "https://upload.wikimedia.org/wikipedia/en/6/65/OpenSSH_logo.png",
			"image": "linuxserver/openssh-server:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "PUBLIC_KEY",
					"label": "PUBLIC_KEY",
					"default": "yourpublickey",
					"description": "Optional ssh public key, which will automatically be added to authorized_keys."
				},
				{
					"name": "PUBLIC_KEY_FILE",
					"label": "PUBLIC_KEY_FILE",
					"default": "/path/to/file",
					"description": "Optionally specify a file containing the public key (works with docker secrets)."
				},
				{
					"name": "PUBLIC_KEY_DIR",
					"label": "PUBLIC_KEY_DIR",
					"default": "/path/to/directory/containing/_only_/pubkeys",
					"description": "Optionally specify a directory containing the public keys (works with docker secrets)."
				},
				{
					"name": "PUBLIC_KEY_URL",
					"label": "PUBLIC_KEY_URL",
					"default": "https://github.com/username.keys",
					"description": "Optionally specify a URL containing the public key."
				},
				{
					"name": "SUDO_ACCESS",
					"label": "SUDO_ACCESS",
					"default": "false",
					"description": "Set to `true` to allow `linuxserver.io`, the ssh user, sudo access. Without `USER_PASSWORD` set, this will allow passwordless sudo access."
				},
				{
					"name": "PASSWORD_ACCESS",
					"label": "PASSWORD_ACCESS",
					"default": "false",
					"description": "Set to `true` to allow user/password ssh access. You will want to set `USER_PASSWORD` or `USER_PASSWORD_FILE` as well."
				},
				{
					"name": "USER_PASSWORD",
					"label": "USER_PASSWORD",
					"default": "password",
					"description": "Optionally set a sudo password for `linuxserver.io`, the ssh user. If this or `USER_PASSWORD_FILE` are not set but `SUDO_ACCESS` is set to true, the user will have passwordless sudo access."
				},
				{
					"name": "USER_PASSWORD_FILE",
					"label": "USER_PASSWORD_FILE",
					"default": "/path/to/file",
					"description": "Optionally specify a file that contains the password. This setting supersedes the `USER_PASSWORD` option (works with docker secrets)."
				},
				{
					"name": "USER_NAME",
					"label": "USER_NAME",
					"default": "linuxserver.io",
					"description": "Optionally specify a user name (Default:`linuxserver.io`)"
				},
				{
					"name": "LOG_STDOUT",
					"label": "LOG_STDOUT",
					"default": "",
					"description": "Set to `true` to log to stdout instead of file."
				}
			],
			"ports": [
				"2222:2222/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/openssh-server/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Openvscode-server",
			"name": "Openvscode-server",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/openvscode-server/config</p>",
			"description": "[Openvscode-server](https://github.com/gitpod-io/openvscode-server) provides a version of VS Code that runs a server on a remote machine and allows access through a modern web browser.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openvscode-server-logo.png",
			"image": "linuxserver/openvscode-server:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "CONNECTION_TOKEN",
					"label": "CONNECTION_TOKEN",
					"default": "",
					"description": "Optional security token for accessing the Web UI (ie. `supersecrettoken`)."
				},
				{
					"name": "CONNECTION_SECRET",
					"label": "CONNECTION_SECRET",
					"default": "",
					"description": "Optional path to a file inside the container that contains the security token for accessing the Web UI (ie. `/path/to/file`). Overrides `CONNECTION_TOKEN`."
				},
				{
					"name": "SUDO_PASSWORD",
					"label": "SUDO_PASSWORD",
					"default": "password",
					"description": "If this optional variable is set, user will have sudo access in the openvscode-server terminal with the specified password."
				},
				{
					"name": "SUDO_PASSWORD_HASH",
					"label": "SUDO_PASSWORD_HASH",
					"default": "",
					"description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`."
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/openvscode-server/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Opera",
			"name": "Opera",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/opera/config</p>",
			"description": "[Opera](https://www.opera.com/) is a multi-platform web browser developed by its namesake company Opera. The browser is based on Chromium, but distinguishes itself from other Chromium-based browsers (Chrome, Edge, etc.) through its user interface and other features.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/opera-icon.png",
			"image": "linuxserver/opera:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "OPERA_CLI",
					"label": "OPERA_CLI",
					"default": "https://www.linuxserver.io/",
					"description": "Specify one or multiple Chromium CLI flags, this string will be passed to the application in full."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/opera/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Orcaslicer",
			"name": "Orcaslicer",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/orcaslicer/config</p>",
			"description": "[Orca Slicer](https://github.com/SoftFever/OrcaSlicer) is an open source slicer for FDM printers. OrcaSlicer is fork of Bambu Studio, it was previously known as BambuStudio-SoftFever, Bambu Studio is forked from PrusaSlicer by Prusa Research, which is from Slic3r by Alessandro Ranellucci and the RepRap community",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/orcaslicer-logo.png",
			"image": "linuxserver/orcaslicer:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/orcaslicer/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Oscam",
			"name": "Oscam",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/oscam/config</p>",
			"description": "[Oscam](http://www.streamboard.tv/oscam/) is an Open Source Conditional Access Module software used for descrambling DVB transmissions using smart cards. It's both a server and a client.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/oscam-logo.png",
			"image": "linuxserver/oscam:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8888:8888/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/oscam/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Overseerr",
			"name": "Overseerr",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/overseerr/config</p>",
			"description": "[Overseerr](https://overseerr.dev/) is a request management and media discovery tool built to work with your existing Plex ecosystem.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/overseerr.png",
			"image": "linuxserver/overseerr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"5055:5055/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/overseerr/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Pairdrop",
			"name": "Pairdrop",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
			"description": "[PairDrop](https://github.com/schlagmichdoch/PairDrop) is a sublime alternative to AirDrop that works on all platforms. Send images, documents or text via peer to peer connection to devices in the same local network/Wi-Fi or to paired devices.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/schlagmichdoch/PairDrop/master/public/images/android-chrome-512x512.png",
			"image": "linuxserver/pairdrop:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "RATE_LIMIT",
					"label": "RATE_LIMIT",
					"default": "false",
					"description": "Set to `true` to limit clients to 100 requests per 5 min"
				},
				{
					"name": "WS_FALLBACK",
					"label": "WS_FALLBACK",
					"default": "false",
					"description": "Set to `true` to enable websocket fallback if the peer to peer WebRTC connection is not available to the client (see App Setup notes)."
				},
				{
					"name": "RTC_CONFIG",
					"label": "RTC_CONFIG",
					"default": "",
					"description": "Path to a json file containing custom STUN/TURN config (see App Setup notes)"
				},
				{
					"name": "DEBUG_MODE",
					"label": "DEBUG_MODE",
					"default": "false",
					"description": "Set to `true` to debug the http server configuration by logging clients IP addresses used by PairDrop to STDOUT. [See here for more info](https://github.com/schlagmichdoch/PairDrop/blob/master/docs/host-your-own.md#debug-mode). Do not use in production!"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Phpmyadmin",
			"name": "Phpmyadmin",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/phpmyadmin/config</p>",
			"description": "[Phpmyadmin](https://github.com/phpmyadmin/phpmyadmin/) is a free software tool written in PHP, intended to handle the administration of MySQL over the Web. phpMyAdmin supports a wide range of operations on MySQL and MariaDB.",
			"categories": [
				"System Tools"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/phpmyadmin-logo.png",
			"image": "linuxserver/phpmyadmin:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "PMA_ARBITRARY",
					"label": "PMA_ARBITRARY",
					"default": "1",
					"description": "Set to `1` to allow you to connect to any server. Setting to `0` will only allow you to connect to specified hosts (See Application Setup)"
				},
				{
					"name": "PMA_ABSOLUTE_URI",
					"label": "PMA_ABSOLUTE_URI",
					"default": "https://phpmyadmin.example.com",
					"description": "Set the URL you will use to access the web frontend"
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/phpmyadmin/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Pidgin",
			"name": "Pidgin",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pidgin/config</p>",
			"description": "[Pidgin](https://pidgin.im/) is a chat program which lets you log into accounts on multiple chat networks simultaneously. This means that you can be chatting with friends on XMPP and sitting in an IRC channel at the same time.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pidgin-logo.png",
			"image": "linuxserver/pidgin:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/pidgin/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Piper",
			"name": "Piper",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/piper/config</p>",
			"description": "[Piper](https://github.com/rhasspy/piper/) is a fast, local neural text to speech system that sounds great and is optimized for the Raspberry Pi 4. This container provides a Wyoming protocol server for Piper.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/piper-logo.png",
			"image": "linuxserver/piper:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "PIPER_VOICE",
					"label": "PIPER_VOICE",
					"default": "en_US-lessac-medium",
					"description": "The [Piper voice](https://huggingface.co/rhasspy/piper-voices/tree/main) to use, in the format `<language>-<name>-<quality>`"
				},
				{
					"name": "PIPER_LENGTH",
					"label": "PIPER_LENGTH",
					"default": "1.0",
					"description": "Voice speaking rate, 1.0 is default with < 1.0 being faster and > 1.0 being slower."
				},
				{
					"name": "PIPER_NOISE",
					"label": "PIPER_NOISE",
					"default": "0.667",
					"description": "Controls the variability of the voice by adding noise. Values above 1 will start to degrade audio."
				},
				{
					"name": "PIPER_NOISEW",
					"label": "PIPER_NOISEW",
					"default": "0.333",
					"description": "Controls the variability of speaking cadence. Values above 1 produce extreme stutters and pauses."
				},
				{
					"name": "PIPER_SPEAKER",
					"label": "PIPER_SPEAKER",
					"default": "0",
					"description": "Speaker number to use if the voice supports multiple speakers."
				},
				{
					"name": "PIPER_PROCS",
					"label": "PIPER_PROCS",
					"default": "1",
					"description": "Number of Piper processes to run simultaneously."
				}
			],
			"ports": [
				"10200:10200/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/piper/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Piwigo",
			"name": "Piwigo",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/piwigo/config<br>mkdir -p /volume1/docker/piwigo/gallery</p>",
			"description": "[Piwigo](http://piwigo.org/) is a photo gallery software for the web that comes with powerful features to publish and manage your collection of pictures.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/piwigo-banner.png",
			"image": "linuxserver/piwigo:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/piwigo/config"
			},
			{
				"container": "/gallery",
				"bind": "/volume1/docker/piwigo/gallery"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Plex",
			"name": "Plex",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/plex/config<br>mkdir -p /volume1/docker/plex/tv<br>mkdir -p /volume1/docker/plex/movies</p>",
			"description": "[Plex](https://plex.tv) organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. Straightforward design and bulk actions mean getting things done faster.",
			"platform": "linux",
			"logo": "http://the-gadgeteer.com/wp-content/uploads/2015/10/plex-logo-e1446990678679.png",
			"image": "linuxserver/plex:latest",
			"network": "host",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "VERSION",
					"label": "VERSION",
					"default": "docker",
					"description": "Set whether to update plex or not - see Application Setup section."
				},
				{
					"name": "PLEX_CLAIM",
					"label": "PLEX_CLAIM",
					"default": "",
					"description": "Optionally you can obtain a claim token from https://plex.tv/claim and input here. Keep in mind that the claim tokens expire within 4 minutes."
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/plex/config"
			},
			{
				"container": "/tv",
				"bind": "/volume1/docker/plex/tv"
			},
			{
				"container": "/movies",
				"bind": "/volume1/docker/plex/movies"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Plex-meta-manager",
			"name": "Plex-meta-manager",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/plex-meta-manager/config</p>",
			"description": "[Plex-meta-manager](https://github.com/meisnate12/Plex-Meta-Manager) is a Python 3 script that can be continuously run using YAML configuration files to update on a schedule the metadata of the movies, shows, and collections in your libraries as well as automatically build collections based on various methods all detailed in the wiki.",
			"categories": [
				"Media Management"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-meta-manager-banner.png",
			"image": "linuxserver/plex-meta-manager:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "PMM_CONFIG",
					"label": "PMM_CONFIG",
					"default": "/config/config.yml",
					"description": "Specify a custom config file to use."
				},
				{
					"name": "PMM_TIME",
					"label": "PMM_TIME",
					"default": "03:00",
					"description": "Comma-separated list of times to update each day. Format: `HH:MM`."
				},
				{
					"name": "PMM_RUN",
					"label": "PMM_RUN",
					"default": "False",
					"description": "Set to `True` to run without the scheduler."
				},
				{
					"name": "PMM_TEST",
					"label": "PMM_TEST",
					"default": "False",
					"description": "Set to `True` to run in debug mode with only collections that have `test: true`."
				},
				{
					"name": "PMM_NO_MISSING",
					"label": "PMM_NO_MISSING",
					"default": "False",
					"description": "Set to `True` to run without any of the missing movie/show functions."
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/plex-meta-manager/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Projectsend",
			"name": "Projectsend",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/projectsend/config<br>mkdir -p /volume1/docker/projectsend/data</p>",
			"description": "[Projectsend](http://www.projectsend.org) is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself. Secure, private and easy. No more depending on external services or e-mail to send those files.",
			"platform": "linux",
			"logo": "http://www.projectsend.org/wp-content/themes/projectsend/img/screenshots.png",
			"image": "linuxserver/projectsend:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "MAX_UPLOAD",
					"label": "MAX_UPLOAD",
					"default": "5000",
					"description": "To set maximum upload size (in MB), default if unset is 5000."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/projectsend/config"
			},
			{
				"container": "/data",
				"bind": "/volume1/docker/projectsend/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Prowlarr",
			"name": "Prowlarr",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/prowlarr/config</p>",
			"description": "[Prowlarr](https://github.com/Prowlarr/Prowlarr) is a indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports both Torrent Trackers and Usenet Indexers. It integrates seamlessly with Sonarr, Radarr, Lidarr, and Readarr offering complete management of your indexers with no per app Indexer setup required (we do it all).",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/prowlarr-banner.png",
			"image": "linuxserver/prowlarr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"9696:9696/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/prowlarr/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Pwndrop",
			"name": "Pwndrop",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pwndrop/config</p>",
			"description": "[Pwndrop](https://github.com/kgretzky/pwndrop) is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/kgretzky/pwndrop/master/media/pwndrop-logo-512.png",
			"image": "linuxserver/pwndrop:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "SECRET_PATH",
					"label": "SECRET_PATH",
					"default": "/pwndrop",
					"description": "Secret path for admin access. Defaults to `/pwndrop`. This parameter only takes effect during initial install; it can later be changed in the web gui."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/pwndrop/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Pydio-cells",
			"name": "Pydio-cells",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pydio-cells/config</p>",
			"description": "[Pydio-cells](https://pydio.com/) is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using the Go language following a micro-service architecture.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/wiki/pydio/cells/images/PydioCellsColor.png",
			"image": "linuxserver/pydio-cells:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "EXTERNALURL",
					"label": "EXTERNALURL",
					"default": "yourdomain.url",
					"description": "The external url you would like to use to access Pydio Cells (Can be https://domain.url or https://IP:PORT)."
				},
				{
					"name": "SERVER_IP",
					"label": "SERVER_IP",
					"default": "0.0.0.0",
					"description": "Enter the LAN IP of the docker server. Required for local access by IP, added to self signed cert as SAN (not required if accessing only through reverse proxy)."
				}
			],
			"ports": [
				"8080:8080/tcp",
				"33060:33060/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/pydio-cells/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Pyload-ng",
			"name": "Pyload-ng",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pyload-ng/config<br>mkdir -p /volume1/docker/pyload-ng/downloads</p>",
			"description": "[pyLoad](https://pyload.net/) is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
			"platform": "linux",
			"logo": "https://pyload.net/img/banner.png",
			"image": "linuxserver/pyload-ng:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8000:8000/tcp",
				"9666:9666/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/pyload-ng/config"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/pyload-ng/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Pylon",
			"name": "Pylon",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pylon/config<br>mkdir -p /volume1/docker/pylon/code</p>",
			"description": "[Pylon](https://github.com/pylonide/pylon) is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/pylonide/pylon/master/doc/screenshot02.png",
			"image": "linuxserver/pylon:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "GITURL",
					"label": "GITURL",
					"default": "https://github.com/linuxserver/docker-pylon.git",
					"description": "Specify a git repo to checkout on first startup"
				},
				{
					"name": "PYUSER",
					"label": "PYUSER",
					"default": "myuser",
					"description": "Specify a basic auth user."
				},
				{
					"name": "PYPASS",
					"label": "PYPASS",
					"default": "mypass",
					"description": "Specify a basic auth password."
				}
			],
			"ports": [
				"3131:3131/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/pylon/config"
			},
			{
				"container": "/code",
				"bind": "/volume1/docker/pylon/code"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Qbittorrent",
			"name": "Qbittorrent",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/qbittorrent/config<br>mkdir -p /volume1/docker/qbittorrent/downloads</p>",
			"description": "The [Qbittorrent](https://www.qbittorrent.org/) project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
			"platform": "linux",
			"logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/qbittorrent-icon.png",
			"image": "linuxserver/qbittorrent:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "WEBUI_PORT",
					"label": "WEBUI_PORT",
					"default": "8080",
					"description": "for changing the port of the web UI, see below for explanation"
				}
			],
			"ports": [
				"8080:8080/tcp",
				"6881:6881/tcp",
				"6881:6881/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/qbittorrent/config"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/qbittorrent/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Qdirstat",
			"name": "Qdirstat",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/qdirstat/config<br>mkdir -p /volume1/docker/qdirstat/data</p>",
			"description": "[QDirStat](https://github.com/shundhammer/qdirstat) Qt-based directory statistics: KDirStat without any KDE -- from the author of the original KDirStat.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qdirstat-logo.png",
			"image": "linuxserver/qdirstat:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/qdirstat/config"
			},
			{
				"container": "/data",
				"bind": "/volume1/docker/qdirstat/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Quassel-core",
			"name": "Quassel-core",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/quassel-core/config</p>",
			"description": "[Quassel-core](http://quassel-irc.org/) is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. This container handles the IRC connection (quasselcore) and requires a desktop client (quasselclient) to be used and configured. It is designed to be always on and will keep your identity present in IRC even when your clients cannot be online. Backlog (history) is downloaded by your client upon reconnection allowing infinite scrollback through time.",
			"platform": "linux",
			"logo": "http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Apps-quassel-icon.png",
			"image": "linuxserver/quassel-core:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "RUN_OPTS",
					"label": "RUN_OPTS",
					"default": "--config-from-environment",
					"description": "Custom CLI options for Quassel"
				}
			],
			"ports": [
				"4242:4242/tcp",
				"113:10113/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/quassel-core/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Quassel-web",
			"name": "Quassel-web",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/quassel-web/config</p>",
			"description": "[Quassel-web](https://github.com/magne4000/quassel-webserver) is a web client for Quassel. Note that a Quassel-Core instance is required, we have a container available [here.](https://hub.docker.com/r/linuxserver/quassel-core/)",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/quassel-web-banner.png",
			"image": "linuxserver/quassel-web:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "QUASSEL_CORE",
					"label": "QUASSEL_CORE",
					"default": "192.168.1.10",
					"description": "specify the URL or IP address of your Quassel Core instance"
				},
				{
					"name": "QUASSEL_PORT",
					"label": "QUASSEL_PORT",
					"default": "4242",
					"description": "specify the port of your Quassel Core instance"
				},
				{
					"name": "QUASSEL_HTTPS",
					"label": "QUASSEL_HTTPS",
					"default": "",
					"description": "Set to `true` to have Quassel web serve over https on port 64443 instead of http on port 64080."
				},
				{
					"name": "URL_BASE",
					"label": "URL_BASE",
					"default": "/quassel",
					"description": "Specify a url-base in reverse proxy setups ie. `/quassel`"
				}
			],
			"ports": [
				"64080:64080/tcp",
				"64443:64443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/quassel-web/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Radarr",
			"name": "Radarr",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/radarr/config<br>mkdir -p /volume1/docker/radarr/movies<br>mkdir -p /volume1/docker/radarr/downloads</p>",
			"description": "[Radarr](https://github.com/Radarr/Radarr) - A fork of Sonarr to work with movies à la Couchpotato.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png",
			"image": "linuxserver/radarr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"7878:7878/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/radarr/config"
			},
			{
				"container": "/movies",
				"bind": "/volume1/docker/radarr/movies"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/radarr/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Raneto",
			"name": "Raneto",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/raneto/config</p>",
			"description": "[Raneto](http://raneto.com/) - is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/gilbitron/Raneto/master/logo/logo_readme.png",
			"image": "linuxserver/raneto:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/raneto/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Rdesktop",
			"name": "Rdesktop",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p><br>mkdir -p /volume1/docker/rdesktop/config</p>",
			"description": "[Rdesktop](http://xrdp.org/) - Containers containing full desktop environments in many popular flavors for Alpine, Ubuntu, Arch, and Fedora accessible via RDP.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rdesktop.png",
			"image": "linuxserver/rdesktop:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3389:3389/tcp"
			],
			"volumes": [
			{
				"container": "/var/run/docker.sock",
				"bind": "/var/run/docker.sock"
			},
			{
				"container": "/config",
				"bind": "/volume1/docker/rdesktop/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Readme-sync",
			"name": "Readme-sync",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/readme-sync/config</p>",
			"description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/readme-sync for details.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/readme-sync:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/readme-sync/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Remmina",
			"name": "Remmina",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/remmina/config</p>",
			"description": "[Remmina](https://remmina.org/) is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers, who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols, in an integrated and consistent user interface. Currently RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC are supported.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/remmina-icon.png",
			"image": "linuxserver/remmina:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/remmina/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Requestrr",
			"name": "Requestrr",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/requestrr/config</p>",
			"description": "[Requestrr](https://github.com/darkalfx/requestrr) is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://github.com/darkalfx/requestrr/raw/master/Logos/requestrr_discord_Icon_512.png",
			"image": "linuxserver/requestrr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"4545:4545/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/requestrr/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Resilio-sync",
			"name": "Resilio-sync",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/resilio-sync/config<br>mkdir -p /volume1/docker/resilio-sync/downloads<br>mkdir -p /volume1/docker/resilio-sync/sync</p>",
			"description": "[Resilio-sync](https://www.resilio.com/individuals/) (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both. There is an official sync image but we created this one as it supports user mapping to simplify permissions for volumes.",
			"platform": "linux",
			"logo": "https://www.resilio.com/img/individual/freeproduct.jpg",
			"image": "linuxserver/resilio-sync:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8888:8888/tcp",
				"55555:55555/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/resilio-sync/config"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/resilio-sync/downloads"
			},
			{
				"container": "/sync",
				"bind": "/volume1/docker/resilio-sync/sync"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Rsnapshot",
			"name": "Rsnapshot",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/rsnapshot/config<br>mkdir -p /volume1/docker/rsnapshot/.snapshots<br>mkdir -p /volume1/docker/rsnapshot/data</p>",
			"description": "[Rsnapshot](http://www.rsnapshot.org/) is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines, and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.'",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rsnapshot.png",
			"image": "linuxserver/rsnapshot:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/rsnapshot/config"
			},
			{
				"container": "/.snapshots",
				"bind": "/volume1/docker/rsnapshot/.snapshots"
			},
			{
				"container": "/data",
				"bind": "/volume1/docker/rsnapshot/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Sabnzbd",
			"name": "Sabnzbd",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/sabnzbd/config<br>mkdir -p /volume1/docker/sabnzbd/downloads<br>mkdir -p /volume1/docker/sabnzbd/incomplete-downloads</p>",
			"description": "[Sabnzbd](http://sabnzbd.org/) makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sabnzbd-banner.png",
			"image": "linuxserver/sabnzbd:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8080:8080/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/sabnzbd/config"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/sabnzbd/downloads"
			},
			{
				"container": "/incomplete-downloads",
				"bind": "/volume1/docker/sabnzbd/incomplete-downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Series-troxide",
			"name": "Series-troxide",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/series-troxide/config</p>",
			"description": "[Series Troxide](https://github.com/MaarifaMaarifa/series-troxide) a Simple and Modern Series Tracker",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/series-troxide-logo.png",
			"image": "linuxserver/series-troxide:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/series-troxide/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Sickchill",
			"name": "Sickchill",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/sickchill/config<br>mkdir -p /volume1/docker/sickchill/downloads<br>mkdir -p /volume1/docker/sickchill/tv</p>",
			"description": "[Sickchill](https://github.com/SickChill/SickChill) is an Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sickchill-banner.png",
			"image": "linuxserver/sickchill:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8081:8081/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/sickchill/config"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/sickchill/downloads"
			},
			{
				"container": "/tv",
				"bind": "/volume1/docker/sickchill/tv"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Sickgear",
			"name": "Sickgear",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/sickgear/config<br>mkdir -p /volume1/docker/sickgear/tv<br>mkdir -p /volume1/docker/sickgear/downloads</p>",
			"description": "[SickGear](https://github.com/sickgear/sickgear) provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more.. For more information on SickGear visit their website and check it out: https://github.com/SickGear/SickGear",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/wiki/SickGear/SickGear.Wiki/images/SickGearLogo.png",
			"image": "linuxserver/sickgear:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8081:8081/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/sickgear/config"
			},
			{
				"container": "/tv",
				"bind": "/volume1/docker/sickgear/tv"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/sickgear/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Smokeping",
			"name": "Smokeping",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/smokeping/config<br>mkdir -p /volume1/docker/smokeping/data</p>",
			"description": "[Smokeping](https://oss.oetiker.ch/smokeping/) keeps track of your network latency. For a full example of what this application is capable of visit [UCDavis](http://smokeping.ucdavis.edu/cgi-bin/smokeping.fcgi).",
			"platform": "linux",
			"logo": "https://camo.githubusercontent.com/e0694ef783e3fd1d74e6776b28822ced01c7cc17/687474703a2f2f6f73732e6f6574696b65722e63682f736d6f6b6570696e672f696e632f736d6f6b6570696e672d6c6f676f2e706e67",
			"image": "linuxserver/smokeping:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/smokeping/config"
			},
			{
				"container": "/data",
				"bind": "/volume1/docker/smokeping/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Snapdrop",
			"name": "Snapdrop",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/snapdrop/config</p>",
			"description": "[Snapdrop](https://github.com/RobinLinus/snapdrop) A local file sharing in your browser. Inspired by Apple's Airdrop.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/RobinLinus/snapdrop/master/client/images/logo_transparent_512x512.png",
			"image": "linuxserver/snapdrop:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/snapdrop/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Snipe-it",
			"name": "Snipe-it",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/snipe-it/config</p>",
			"description": "[Snipe-it](https://github.com/snipe/snipe-it) makes asset management easy. It was built by people solving real-world IT and asset management problems, and a solid UX has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
			"platform": "linux",
			"logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/snipe-it-logo500x500.png",
			"image": "linuxserver/snipe-it:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "APP_URL",
					"label": "APP_URL",
					"default": "http://localhost:8080",
					"description": "Hostname or IP and port if applicable, be sure to define https/http"
				},
				{
					"name": "MYSQL_PORT_3306_TCP_ADDR",
					"label": "MYSQL_PORT_3306_TCP_ADDR",
					"default": "",
					"description": "Mysql hostname or IP to use"
				},
				{
					"name": "MYSQL_PORT_3306_TCP_PORT",
					"label": "MYSQL_PORT_3306_TCP_PORT",
					"default": "",
					"description": "Mysql port to use"
				},
				{
					"name": "MYSQL_DATABASE",
					"label": "MYSQL_DATABASE",
					"default": "",
					"description": "Mysql database to use"
				},
				{
					"name": "MYSQL_USER",
					"label": "MYSQL_USER",
					"default": "",
					"description": "Mysql user to use"
				},
				{
					"name": "MYSQL_PASSWORD",
					"label": "MYSQL_PASSWORD",
					"default": "",
					"description": "Mysql password to use"
				}
			],
			"ports": [
				"8080:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/snipe-it/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Sonarr",
			"name": "Sonarr",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/sonarr/config<br>mkdir -p /volume1/docker/sonarr/tv<br>mkdir -p /volume1/docker/sonarr/downloads</p>",
			"description": "[Sonarr](https://sonarr.tv/) (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
			"categories": [
				"Media"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sonarr-banner.png",
			"image": "linuxserver/sonarr:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8989:8989/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/sonarr/config"
			},
			{
				"container": "/tv",
				"bind": "/volume1/docker/sonarr/tv"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/sonarr/downloads"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Sqlitebrowser",
			"name": "Sqlitebrowser",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/sqlitebrowser/config</p>",
			"description": "[DB Browser for SQLite](https://sqlitebrowser.org/) is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sqlitebrowser-banner.png",
			"image": "linuxserver/sqlitebrowser:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/sqlitebrowser/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Steamos",
			"name": "Steamos",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/steamos/config<br><br></p>",
			"description": "[SteamOS](https://www.steamdeck.com/) is an Arch based Linux distribution made by Valve Software. This container is a vanilla Arch install with Steam repositories added for software support. **This container will only work with modern AMD/Intel GPUs on a real Linux Host**",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/steamos-logo.png",
			"image": "linuxserver/steamos:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "DRINODE",
					"label": "DRINODE",
					"default": "/dev/dri/renderD128",
					"description": "Specify the render device (GPU) for the contianer to use."
				},
				{
					"name": "HOST_IP",
					"label": "HOST_IP",
					"default": "192.168.100.10",
					"description": "Specify the IP of the host, needed for LAN Remote Play."
				},
				{
					"name": "STARTUP",
					"label": "STARTUP",
					"default": "KDE",
					"description": "KDE to boot into desktop mode, BIGPICTURE to boot into gamescope."
				},
				{
					"name": "RESOLUTION",
					"label": "RESOLUTION",
					"default": "1920x1080",
					"description": "When booting into BIGPICTURE mode the screen resolution will be bound to this value."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp",
				"27031-27036:27031-27036/udp",
				"27031-27036:27031-27036",
				"47984-47990:47984-47990",
				"48010-48010:48010-48010",
				"47998-48000:47998-48000/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/steamos/config"
			},
			{
				"container": "/dev/input",
				"bind": "/dev/input"
			},
			{
				"container": "/run/udev/data",
				"bind": "/run/udev/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Swag",
			"name": "Swag",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/swag/config</p>",
			"description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
			"platform": "linux",
			"logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif",
			"image": "linuxserver/swag:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "URL",
					"label": "URL",
					"default": "yourdomain.url",
					"description": "Top url you have control over (`customdomain.com` if you own it, or `customsubdomain.ddnsprovider.com` if dynamic dns)."
				},
				{
					"name": "VALIDATION",
					"label": "VALIDATION",
					"default": "http",
					"description": "Certbot validation method to use, options are `http` or `dns` (`dns` method also requires `DNSPLUGIN` variable set)."
				},
				{
					"name": "SUBDOMAINS",
					"label": "SUBDOMAINS",
					"default": "www,",
					"description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this *exactly* to `wildcard` (wildcard cert is available via `dns` validation only)"
				},
				{
					"name": "CERTPROVIDER",
					"label": "CERTPROVIDER",
					"default": "",
					"description": "Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing [ZeroSSL account](https://app.zerossl.com/signup) and the e-mail address entered in `EMAIL` env var). Otherwise defaults to Let's Encrypt."
				},
				{
					"name": "DNSPLUGIN",
					"label": "DNSPLUGIN",
					"default": "cloudflare",
					"description": "Required if `VALIDATION` is set to `dns`. Options are `acmedns`, `aliyun`, `azure`, `bunny`, `cloudflare`, `cpanel`, `desec`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `dnspod`, `do`, `domeneshop`, `dreamhost`, `duckdns`, `freedns`, `gandi`, `gehirn`, `glesys`, `godaddy`, `google`, `google-domains`, `he`, `hetzner`, `infomaniak`, `inwx`, `ionos`, `linode`, `loopia`, `luadns`, `namecheap`, `netcup`, `njalla`, `nsone`, `ovh`, `porkbun`, `rfc2136`, `route53`, `sakuracloud`, `standalone`, `transip`, and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`."
				},
				{
					"name": "PROPAGATION",
					"label": "PROPAGATION",
					"default": "",
					"description": "Optionally override (in seconds) the default propagation time for the dns plugins."
				},
				{
					"name": "EMAIL",
					"label": "EMAIL",
					"default": "",
					"description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL)."
				},
				{
					"name": "ONLY_SUBDOMAINS",
					"label": "ONLY_SUBDOMAINS",
					"default": "false",
					"description": "If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true`"
				},
				{
					"name": "EXTRA_DOMAINS",
					"label": "EXTRA_DOMAINS",
					"default": "",
					"description": "Additional fully qualified domain names (comma separated, no spaces) ie. `extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org`"
				},
				{
					"name": "STAGING",
					"label": "STAGING",
					"default": "false",
					"description": "Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes."
				}
			],
			"ports": [
				"443:443/tcp",
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/swag/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Synclounge",
			"name": "Synclounge",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
			"description": "[Synclounge](https://github.com/samcm/synclounge) is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/synclounge-banner.png",
			"image": "linuxserver/synclounge:latest",
			"env": [
				{
					"name": "AUTH_LIST",
					"label": "AUTH_LIST",
					"default": "plexuser1,plexuser2,email1,machineid1",
					"description": "If set, only the users defined here and the users of the plex servers defined here will be able to access the server. Use e-mails, plex usernames and/or plex server machine ids, comma separated, no spaces."
				},
				{
					"name": "AUTOJOIN_ENABLED",
					"label": "AUTOJOIN_ENABLED",
					"default": "false",
					"description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set to `true` to let users autojoin the server and a room (specified by the `AUTOJOIN_ROOM` var)."
				},
				{
					"name": "AUTOJOIN_ROOM",
					"label": "AUTOJOIN_ROOM",
					"default": "roomname",
					"description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set the room name for auto joining (requires `AUTOJOIN_ENABLED` set to `true`)."
				}
			],
			"ports": [
				"8088:8088/tcp"
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Syncthing",
			"name": "Syncthing",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/syncthing/config<br>mkdir -p /volume1/docker/syncthing/data1<br>mkdir -p /volume1/docker/syncthing/data2</p>",
			"description": "[Syncthing](https://syncthing.net) replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syncthing-banner.png",
			"image": "linuxserver/syncthing:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8384:8384/tcp",
				"22000:22000/tcp",
				"22000:22000/udp",
				"21027:21027/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/syncthing/config"
			},
			{
				"container": "/data1",
				"bind": "/volume1/docker/syncthing/data1"
			},
			{
				"container": "/data2",
				"bind": "/volume1/docker/syncthing/data2"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Syslog-ng",
			"name": "Syslog-ng",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/syslog-ng/config<br></p>",
			"description": "[syslog-ng](https://www.syslog-ng.com/products/open-source-log-management/) allows you to flexibly collect, parse, classify, rewrite and correlate logs from across your infrastructure and store or route them to log analysis tools.",
			"categories": [
				"System Tools"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syslog-ng-logo.png",
			"image": "linuxserver/syslog-ng:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"514:5514/udp",
				"601:6601/tcp",
				"6514:6514/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/syslog-ng/config"
			},
			{
				"container": "/var/log",
				"bind": "/var/log"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Tautulli",
			"name": "Tautulli",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/tautulli/config</p>",
			"description": "[Tautulli](http://tautulli.com) is a python based web application for monitoring, analytics and notifications for Plex Media Server.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tautulli-icon.png",
			"image": "linuxserver/tautulli:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"8181:8181/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/tautulli/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Tester",
			"name": "Tester",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
			"description": "This internal tool is used as a desktop sandbox in our CI process to grab a screenshot of a hopefully functional endpoint",
			"platform": "linux",
			"logo": "https://avatars3.githubusercontent.com/u/12324908?s=200&v=4",
			"image": "linuxserver/tester:latest",
			"env": [
				{
					"name": "URL",
					"label": "URL",
					"default": "http://google.com",
					"description": "Specify an endpoint, the container will automatically determine the correct protocol and program to use"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Thelounge",
			"name": "Thelounge",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/thelounge/config</p>",
			"description": "[Thelounge](https://thelounge.github.io/) (a fork of shoutIRC) is a web IRC client that you host on your own server.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/thelounge/thelounge/master/client/img/logo-vertical-transparent-bg.svg?sanitize=true",
			"image": "linuxserver/thelounge:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"9000:9000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/thelounge/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Transmission",
			"name": "Transmission",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/transmission/config<br>mkdir -p /volume1/docker/transmission/downloads<br>mkdir -p /volume1/docker/transmission/watch</p>",
			"description": "[Transmission](https://www.transmissionbt.com/) is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/transmission.png",
			"image": "linuxserver/transmission:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "TRANSMISSION_WEB_HOME",
					"label": "TRANSMISSION_WEB_HOME",
					"default": "",
					"description": "Specify the path to an alternative UI folder."
				},
				{
					"name": "USER",
					"label": "USER",
					"default": "",
					"description": "Specify an optional username for the interface"
				},
				{
					"name": "PASS",
					"label": "PASS",
					"default": "",
					"description": "Specify an optional password for the interface"
				},
				{
					"name": "WHITELIST",
					"label": "WHITELIST",
					"default": "",
					"description": "Specify an optional list of comma separated ip whitelist. Fills rpc-whitelist setting."
				},
				{
					"name": "PEERPORT",
					"label": "PEERPORT",
					"default": "",
					"description": "Specify an optional port for torrent TCP/UDP connections. Fills peer-port setting."
				},
				{
					"name": "HOST_WHITELIST",
					"label": "HOST_WHITELIST",
					"default": "",
					"description": "Specify an optional list of comma separated dns name whitelist. Fills rpc-host-whitelist setting."
				}
			],
			"ports": [
				"9091:9091/tcp",
				"51413:51413/tcp",
				"51413:51413/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/transmission/config"
			},
			{
				"container": "/downloads",
				"bind": "/volume1/docker/transmission/downloads"
			},
			{
				"container": "/watch",
				"bind": "/volume1/docker/transmission/watch"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Tvheadend",
			"name": "Tvheadend",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/tvheadend/config<br>mkdir -p /volume1/docker/tvheadend/recordings</p>",
			"description": "[Tvheadend](https://www.tvheadend.org/) works as a proxy server: is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT>IP and HDHomeRun as input sources. Tvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT>IP streaming. Multiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tvheadend-big.png",
			"image": "linuxserver/tvheadend:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "RUN_OPTS",
					"label": "RUN_OPTS",
					"default": "",
					"description": "Optionally specify additional arguments to be passed. See Additional runtime parameters."
				}
			],
			"ports": [
				"9981:9981/tcp",
				"9982:9982/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/tvheadend/config"
			},
			{
				"container": "/recordings",
				"bind": "/volume1/docker/tvheadend/recordings"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Ubooquity",
			"name": "Ubooquity",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ubooquity/config<br>mkdir -p /volume1/docker/ubooquity/books<br>mkdir -p /volume1/docker/ubooquity/comics<br>mkdir -p /volume1/docker/ubooquity/files</p>",
			"description": "[Ubooquity](https://vaemendis.net/ubooquity/) is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ubooquity-banner.png",
			"image": "linuxserver/ubooquity:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "MAXMEM",
					"label": "MAXMEM",
					"default": "",
					"description": "To set the maximum memory. ( ex: set '1024' for 1GB )"
				}
			],
			"ports": [
				"2202:2202/tcp",
				"2203:2203/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/ubooquity/config"
			},
			{
				"container": "/books",
				"bind": "/volume1/docker/ubooquity/books"
			},
			{
				"container": "/comics",
				"bind": "/volume1/docker/ubooquity/comics"
			},
			{
				"container": "/files",
				"bind": "/volume1/docker/ubooquity/files"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Unifi-controller",
			"name": "Unifi-controller",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/unifi-controller/config</p>",
			"description": "The [Unifi-controller](https://www.ubnt.com/enterprise/#unifi) software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
			"categories": [
				"Networking"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-banner.png",
			"image": "linuxserver/unifi-controller:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "MEM_LIMIT",
					"label": "MEM_LIMIT",
					"default": "1024",
					"description": "Optionally change the Java memory limit (in Megabytes). Set to `default` to reset to default"
				},
				{
					"name": "MEM_STARTUP",
					"label": "MEM_STARTUP",
					"default": "1024",
					"description": "Optionally change the Java initial/minimum memory (in Megabytes). Set to `default` to reset to default"
				}
			],
			"ports": [
				"8443:8443/tcp",
				"3478:3478/udp",
				"10001:10001/udp",
				"8080:8080/tcp",
				"1900:1900/udp",
				"8843:8843/tcp",
				"8880:8880/tcp",
				"6789:6789/tcp",
				"5514:5514/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/unifi-controller/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Unifi-network-application",
			"name": "Unifi-network-application",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/unifi-network-application/config</p>",
			"description": "The [Unifi-network-application](https://ui.com/) software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-banner.png",
			"image": "linuxserver/unifi-network-application:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "MONGO_USER",
					"label": "MONGO_USER",
					"default": "unifi",
					"description": "Mongodb Username. Only evaluated on first run. **Special characters must be [url encoded](https://en.wikipedia.org/wiki/Percent-encoding)**."
				},
				{
					"name": "MONGO_PASS",
					"label": "MONGO_PASS",
					"default": "",
					"description": "Mongodb Password. Only evaluated on first run. **Special characters must be [url encoded](https://en.wikipedia.org/wiki/Percent-encoding)**."
				},
				{
					"name": "MONGO_HOST",
					"label": "MONGO_HOST",
					"default": "unifi-db",
					"description": "Mongodb Hostname. Only evaluated on first run."
				},
				{
					"name": "MONGO_PORT",
					"label": "MONGO_PORT",
					"default": "27017",
					"description": "Mongodb Port. Only evaluated on first run."
				},
				{
					"name": "MONGO_DBNAME",
					"label": "MONGO_DBNAME",
					"default": "unifi",
					"description": "Mongodb Database Name (stats DB is automatically suffixed with `_stat`). Only evaluated on first run."
				},
				{
					"name": "MEM_LIMIT",
					"label": "MEM_LIMIT",
					"default": "1024",
					"description": "Optionally change the Java memory limit (in Megabytes). Set to `default` to reset to default"
				},
				{
					"name": "MEM_STARTUP",
					"label": "MEM_STARTUP",
					"default": "1024",
					"description": "Optionally change the Java initial/minimum memory (in Megabytes). Set to `default` to reset to default"
				},
				{
					"name": "MONGO_TLS",
					"label": "MONGO_TLS",
					"default": "",
					"description": "Mongodb enable [TLS](https://www.mongodb.com/docs/manual/reference/connection-string/#mongodb-urioption-urioption.tls). Only evaluated on first run."
				},
				{
					"name": "MONGO_AUTHSOURCE",
					"label": "MONGO_AUTHSOURCE",
					"default": "",
					"description": "Mongodb [authSource](https://www.mongodb.com/docs/manual/reference/connection-string/#mongodb-urioption-urioption.authSource). For Atlas set to `admin`.Defaults to `MONGO_DBNAME`.Only evaluated on first run."
				}
			],
			"ports": [
				"8443:8443/tcp",
				"3478:3478/udp",
				"10001:10001/udp",
				"8080:8080/tcp",
				"1900:1900/udp",
				"8843:8843/tcp",
				"8880:8880/tcp",
				"6789:6789/tcp",
				"5514:5514/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/unifi-network-application/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Unrar",
			"name": "Unrar",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/unrar/config</p>",
			"description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/unrar for details.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/unrar:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/unrar/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Vscodium",
			"name": "Vscodium",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/vscodium/config</p>",
			"description": "[VSCodium](https://vscodium.com/) is a community-driven, freely-licensed binary distribution of Microsoft’s editor VS Code.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/vscodium-icon.png",
			"image": "linuxserver/vscodium:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/vscodium/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Webcord",
			"name": "Webcord",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/webcord/config</p>",
			"description": "[WebCord](https://github.com/SpacingBat3/WebCord) can be summarized as a pack of security and privacy hardenings, Discord features reimplementations, Electron / Chromium / Discord bugs workarounds, stylesheets, internal pages and wrapped https://discord.com page, designed to conform with ToS as much as it is possible (or hide the changes that might violate it from Discord's eyes).",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webcord-icon.png",
			"image": "linuxserver/webcord:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/webcord/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Webgrabplus",
			"name": "Webgrabplus",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/webgrabplus/config<br>mkdir -p /volume1/docker/webgrabplus/data</p>",
			"description": "[Webgrabplus](http://www.webgrabplus.com) is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.",
			"platform": "linux",
			"logo": "http://www.webgrabplus.com/sites/default/themes/WgTheme/images/slideshows/EPG_fading.jpg",
			"image": "linuxserver/webgrabplus:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/webgrabplus/config"
			},
			{
				"container": "/data",
				"bind": "/volume1/docker/webgrabplus/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Webtop",
			"name": "Webtop",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/webtop/config<br></p>",
			"description": "[Webtop](https://github.com/linuxserver/docker-webtop) - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.",
			"categories": [
				"Utilities"
			],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png",
			"image": "linuxserver/webtop:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "SUBFOLDER",
					"label": "SUBFOLDER",
					"default": "/",
					"description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
				},
				{
					"name": "TITLE",
					"label": "TITLE",
					"default": "Webtop",
					"description": "String which will be used as page/tab title in the web browser."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/webtop/config"
			},
			{
				"container": "/var/run/docker.sock",
				"bind": "/var/run/docker.sock"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Wikijs",
			"name": "Wikijs",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wikijs/config<br>mkdir -p /volume1/docker/wikijs/data</p>",
			"description": "[Wikijs](https://github.com/Requarks/wiki) A modern, lightweight and powerful wiki app built on NodeJS.",
			"platform": "linux",
			"logo": "https://static.requarks.io/logo/wikijs-full.svg",
			"image": "linuxserver/wikijs:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "DB_TYPE",
					"label": "DB_TYPE",
					"default": "sqlite",
					"description": "Set to sqlite (default) or postgres depending on the database engine you wish to use"
				},
				{
					"name": "DB_HOST",
					"label": "DB_HOST",
					"default": "",
					"description": "DB hostname (postgres only)"
				},
				{
					"name": "DB_PORT",
					"label": "DB_PORT",
					"default": "",
					"description": "DB port (postgres only)"
				},
				{
					"name": "DB_NAME",
					"label": "DB_NAME",
					"default": "",
					"description": "DB name (postgres only)"
				},
				{
					"name": "DB_USER",
					"label": "DB_USER",
					"default": "",
					"description": "DB username (postgres only)"
				},
				{
					"name": "DB_PASS",
					"label": "DB_PASS",
					"default": "",
					"description": "DB password (postgres only)"
				}
			],
			"ports": [
				"3000:3000/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/wikijs/config"
			},
			{
				"container": "/data",
				"bind": "/volume1/docker/wikijs/data"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Wireguard",
			"name": "Wireguard",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wireguard/config<br></p>",
			"description": "[WireGuard®](https://www.wireguard.com/) is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.",
			"platform": "linux",
			"logo": "https://www.wireguard.com/img/wireguard.svg",
			"image": "linuxserver/wireguard:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "SERVERURL",
					"label": "SERVERURL",
					"default": "wireguard.domain.com",
					"description": "External IP or domain name for docker host. Used in server mode. If set to `auto`, the container will try to determine and set the external IP automatically"
				},
				{
					"name": "SERVERPORT",
					"label": "SERVERPORT",
					"default": "51820",
					"description": "External port for docker host. Used in server mode."
				},
				{
					"name": "PEERS",
					"label": "PEERS",
					"default": "1",
					"description": "Number of peers to create confs for. Required for server mode. Can also be a list of names: `myPC,myPhone,myTablet` (alphanumeric only)"
				},
				{
					"name": "PEERDNS",
					"label": "PEERDNS",
					"default": "auto",
					"description": "DNS server set in peer/client configs (can be set as `8.8.8.8`). Used in server mode. Defaults to `auto`, which uses wireguard docker host's DNS via included CoreDNS forward."
				},
				{
					"name": "INTERNAL_SUBNET",
					"label": "INTERNAL_SUBNET",
					"default": "10.13.13.0",
					"description": "Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode."
				},
				{
					"name": "ALLOWEDIPS",
					"label": "ALLOWEDIPS",
					"default": "0.0.0.0/0",
					"description": "The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: '0.0.0.0/0, ::0/0' This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server's WG ip, such as 10.13.13.1."
				},
				{
					"name": "PERSISTENTKEEPALIVE_PEERS",
					"label": "PERSISTENTKEEPALIVE_PEERS",
					"default": "",
					"description": "Set to `all` or a list of comma separated peers (ie. `1,4,laptop`) for the wireguard server to send keepalive packets to listed peers every 25 seconds. Useful if server is accessed via domain name and has dynamic IP. Used only in server mode."
				},
				{
					"name": "LOG_CONFS",
					"label": "LOG_CONFS",
					"default": "true",
					"description": "Generated QR codes will be displayed in the docker log. Set to `false` to skip log output."
				}
			],
			"ports": [
				"51820:51820/udp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/wireguard/config"
			},
			{
				"container": "/lib/modules",
				"bind": "/lib/modules"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Wireshark",
			"name": "Wireshark",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wireshark/config</p>",
			"description": "[Wireshark](https://www.wireshark.org/) is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png",
			"image": "linuxserver/wireshark:latest",
			"network": "host",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/wireshark/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Wps-office",
			"name": "Wps-office",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wps-office/config</p>",
			"description": "[WPS Office](https://www.wps.com/) is a lightweight, feature-rich comprehensive office suite with high compatibility. As a handy and professional office software, WPS Office allows you to edit files in Writer, Presentation, Spreadsheet, and PDF to improve your work efficiency.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wps-office-icon.png",
			"image": "linuxserver/wps-office:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"3000:3000/tcp",
				"3001:3001/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/wps-office/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Xbackbone",
			"name": "Xbackbone",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/xbackbone/config</p>",
			"description": "[Xbackbone](https://github.com/SergiX44/XBackBone) is a simple, self-hosted, lightweight PHP file manager that support the instant sharing tool ShareX and *NIX systems. It supports uploading and displaying images, GIF, video, code, formatted text, and file downloading and uploading. Also have a web UI with multi user management, past uploads history and search support.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/SergiX44/XBackBone/master/docs/img/xbackbone.png",
			"image": "linuxserver/xbackbone:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/xbackbone/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Your_spotify",
			"name": "Your_spotify",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
			"description": "[Your_spotify](https://github.com/Yooooomi/your_spotify) is a self-hosted application that tracks what you listen and offers you a dashboard to explore statistics about it! It's composed of a web server which polls the Spotify API every now and then and a web application on which you can explore your statistics.",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/your_spotify-logo.png",
			"image": "linuxserver/your_spotify:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				},
				{
					"name": "APP_URL",
					"label": "APP_URL",
					"default": "http://localhost",
					"description": "The protocol and hostname where the app will be accessed."
				},
				{
					"name": "SPOTIFY_PUBLIC",
					"label": "SPOTIFY_PUBLIC",
					"default": "",
					"description": "Your Spotify application client ID."
				},
				{
					"name": "SPOTIFY_SECRET",
					"label": "SPOTIFY_SECRET",
					"default": "",
					"description": "Your Spotify application secret."
				},
				{
					"name": "CORS",
					"label": "CORS",
					"default": "http://localhost:80,https://localhost:443",
					"description": "Allowed CORS sources, set to `all` to allow any source."
				},
				{
					"name": "MONGO_ENDPOINT",
					"label": "MONGO_ENDPOINT",
					"default": "mongodb://mongo:27017/your_spotify",
					"description": "Set mongodb endpoint address/port."
				}
			],
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Yq",
			"name": "Yq",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/yq/config</p>",
			"description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/yq for details.",
			"platform": "linux",
			"logo": "",
			"image": "linuxserver/yq:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"80:80/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/yq/config"
			}
			],
			"restart_policy": "unless-stopped"
		},
		{
			"type": 1,
			"title": "Znc",
			"name": "Znc",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/znc/config</p>",
			"description": "[Znc](http://wiki.znc.in/ZNC) is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
			"platform": "linux",
			"logo": "http://wiki.znc.in/resources/assets/wiki.png",
			"image": "linuxserver/znc:latest",
			"env": [
				{
					"name": "PUID",
					"label": "PUID",
					"default": "1024",
					"description": "for UserID"
				},
				{
					"name": "PGID",
					"label": "PGID",
					"default": "100",
					"description": "for GroupID"
				},
				{
					"name": "TZ",
					"label": "TZ",
					"default": "Europe/Amsterdam",
					"description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
				}
			],
			"ports": [
				"6501:6501/tcp"
			],
			"volumes": [
			{
				"container": "/config",
				"bind": "/volume1/docker/znc/config"
			}
			],
			"restart_policy": "unless-stopped"
		}
	]
}