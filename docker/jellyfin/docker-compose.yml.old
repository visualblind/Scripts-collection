version: '3.3'
services: 
  jellyfin: 
    container_name: jellyfin
    depends_on: 
      - nginx_proxy
    devices: 
      - "/dev/dri:/dev/dri"
    environment: 
      - JELLYFIN_PublishedServerUrl="https://travisflix.com"
      - JELLYFIN_MEDIA_DIR=/media
      - JELLYFIN_DATA_DIR=/config
      - JELLYFIN_CACHE_DIR=/cache
      - JELLYFIN_CONFIG_DIR=/config/config
      - JELLYFIN_LOG_DIR=/config/log
      - JELLYFIN_WEB_DIR=/jellyfin/jellyfin-web
      - JELLYFIN_FFMPEG=/usr/lib/jellyfin-ffmpeg/ffmpeg
    image: jellyfin/jellyfin:latest
    network_mode: host
    restart: unless-stopped
    volumes: 
      - "/usr/local/jellyfin/config:/config"
      - "/usr/local/jellyfin/media:/media:ro"
      - "/usr/local/jellyfin/cache:/cache"
      - "/usr/local/jellyfin/jellyfin-web:/jellyfin/jellyfin-web/src"

  nginx_proxy: 
    container_name: nginx
    environment: 
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    image: ghcr.io/linuxserver/nginx:latest
    networks: 
      - linuxserver-nginx_default
    ports: 
      - "80:80"
      - "443:443"
      - "8081:8081"  
    restart: unless-stopped
    volumes: 
      - "/usr/local/linuxserver-nginx/config:/config"
      - "/run/nginx-cache:/config/nginx-cache"

  filebrowser:
    container_name: filebrowser
    environment:
      - TZ=America/Los_Angeles
      - FB_BASEURL=/
      - FB_USERNAME=visualblind
    image: hurlenko/filebrowser
    user: "${UID}:${GID}"
    volumes:
      - /usr/local/filebrowser/config:/config
      - /usr/local/filebrowser/data:/data
      - /usr/local/filebrowser/branding:/branding
    ports:
      - 8080:8080
    networks:
      - linuxserver-nginx_default
    restart: unless-stopped

  openspeedtest:
    depends_on:
      - nginx_proxy
    container_name: openspeedtest
    image: openspeedtest/latest:latest
    networks:
      - linuxserver-nginx_default
    ports:
      - "3000:3000"
    restart: unless-stopped

  letsencrypt:
    depends_on:
      - nginx_proxy
    image: ghcr.io/linuxserver/letsencrypt:latest
    networks:
      - linuxserver-nginx_default
    container_name: letsencryptpnw
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=US/Pacific
      - URL=pnwpanorama.com
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
    volumes:
      - /docker_data/nginx/config:/config
    ports:
      - "4433:443"
      - "8082:80"
    restart: unless-stopped

  portainer:
    depends_on:
      - nginx_proxy
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - "/usr/local/portainer/data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
    image: portainer/portainer
    networks:
      - linuxserver-nginx_default

  ombi:
    depends_on:
      - nginx_proxy
    container_name: ombi
    ports:
      - "3579:3579"
    volumes:
      - /usr/local/ombi/appdata/config:/config
    image: lscr.io/linuxserver/ombi:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - BASE_URL=/ #optional
    networks:
      - linuxserver-nginx_default
    restart: unless-stopped


#  droppy:
#    depends_on:
#      - nginx_proxy
#    container_name: droppy
#    ports:
#      - "8989:8989"
#    volumes:
#      - "/usr/local/droppy/config:/config"
#      - "/usr/local/droppy/data:/files"
#      - "/usr/local/jellyfin/media/video-tech:/files/media/video-tech:ro"
#    image: silverwind/droppy
#    networks:
#      - linuxserver-nginx_default
#    restart: unless-stopped

networks: 
  linuxserver-nginx_default:
    external: true
    name: linuxserver-nginx_default
